{"version":3,"file":"nextcloud-client.cjs.js","sources":["../source/errors.ts","../source/webdav.wrapper.ts","../source/webdav.utils.ts","../source/webdav.ts","../source/common.ts","../source/ocs/types.ts","../source/ocs/helper.ts","../source/requestWrapper.ts","../source/ocs/activity.ts","../source/ocs/ocs-connection.ts","../source/ocs/user.ts","../source/ocs/group.ts","../source/ocs/share.ts","../source/ocs/groupfolders.ts","../source/ocs/ocs.ts","../source/types.ts","../source/helper.ts","../source/client.ts"],"sourcesContent":["/**\n * Return a constructor for a new error type.\n *\n * @function createErrorType\n *\n * @param initialize A function that gets passed the constructed error and the passed message and\n *                              runs during the construction of new instances.\n * @param ErrorClass An error class you wish to subclass. Defaults to Error.\n * @param prototype Additional properties and methods for the new error type.\n *\n * @return The constructor for the new error type.\n */\nfunction createErrorType<\n  TInitialize extends (error: Error, ...args: any[]) => void,\n  TErrorClass extends new (...args: any[]) => Error = ErrorConstructor,\n  TPrototype extends object = object\n>(\n  initialize: TInitialize,\n  ErrorClass?: TErrorClass,\n  prototype?: TPrototype\n) {\n  ErrorClass ??= Error as any;\n\n  let Constructor = function (...data: any[]) {\n    let error = Object.create(Constructor.prototype);\n\n    error.stack = (new Error).stack;\n\n    if (initialize) {\n      initialize(error, ...data);\n    }\n\n    return error;\n  } ;\n\n  Constructor.prototype = Object.create(ErrorClass!.prototype);\n\n  if (prototype) {\n    Object.assign(Constructor.prototype, prototype);\n  }\n\n  return Constructor as unknown as (\n    TInitialize extends undefined\n      ? (new (message: string) => Error)\n      : (\n        TInitialize extends (error: Error, ...args: infer TArgs) => void\n          ? (new (...args: TArgs) => Error)\n          : never\n      )\n  );\n}\n\nexport const NextCloudException = createErrorType(\n  function nextCloudError(error, message: string, subError?: Error) {\n    error.message = message;\n    if (subError) {\n      error.message += `: ${subError.message}`;\n      error.stack = subError.stack;\n    }\n  },\n);\n\nexport const NextCloudServerException = createErrorType(\n  function nextCloudError(error, message: string, subError?: Error) {\n    error.message = message;\n    if (subError) {\n      error.message += `: ${subError.message}`;\n      error.stack = subError.stack;\n    }\n  },\n\n  NextCloudException\n);\n\nexport const NextCloudClientException = createErrorType(\n  function nextCloudError(error, message: string, subError?: Error) {\n    error.message = message;\n    if (subError) {\n      error.message += `: ${subError.message}`;\n      error.stack = subError.stack;\n    }\n  },\n\n  NextCloudException\n);\n\nexport const ForbiddenError = createErrorType(\n  function forbiddenErrorConstructor(error, path: string) {\n    error.message = `Access to ${path} was denied`;\n  },\n\n  NextCloudServerException\n);\n\nexport const NotFoundError = createErrorType(\n  function notFoundErrorConstructor(error, path: string) {\n    error.message = `${path} not found!`;\n  },\n\n  NextCloudServerException\n);\n\nexport const NotReadyError = createErrorType(\n  function notReadyErrorConstructor(error) {\n    error.message = 'The Nextcloud instance is initializing…';\n  },\n\n  NextCloudServerException\n);\n\nexport const UnreachableError = createErrorType(\n  function notReadyErrorConstructor(error) {\n    error.message = 'The Nextcloud instance is unreachable…';\n  },\n\n  NextCloudServerException\n);\n\nexport const IncorrectPathTypeError = createErrorType(\n  function incorrectPathTypeErrorConstructor(error, options: { path: string, type: string }) {\n    const {path, type} = options;\n    error.message = `The path '${path}' is not a ${type}`;\n  },\n\n  NextCloudServerException\n);\n\nexport const ConflictError = createErrorType(\n  function conflictErrorConstructor(error, path: string) {\n    error.message = `Conflict on ${path}`;\n  },\n\n  NextCloudServerException\n);\n\nexport const OcsError = createErrorType(\n  function ocsErrorConstructor(error, options: { message: string, identifier?: string | number, reason: string, statusCode?: string | number }) {\n    const {message, identifier, reason, statusCode} = options;\n\n    const id = (identifier ? ` '${identifier}'` : '');\n    error.name = 'OcsError';\n    error.message = `${message}${id}: ${reason}`;\n    if (statusCode) {\n      (error as any).statusCode = statusCode;\n    }\n  },\n\n  NextCloudServerException\n);\n\nexport const BadArgumentError = createErrorType(\n  function badArgumentErrorConstructor(error, message: string) {\n    error.message = message;\n  },\n\n  NextCloudClientException\n);\n","import type { WebDAVClient, WebDAVClientError } from \"webdav\";\nimport { NotFoundError, ForbiddenError, ConflictError, NextCloudServerException } from './errors';\n\n// prefer whitelist over blacklist (or looping over all functions)\n//   - less likely to break\nconst WRAPPED_FUNCTIONS: [\n  /**\n   * The name of the function to wrap.\n   */\n  string,\n\n  /**\n   * The position of the path argument in the original function.\n   * @note -1 means no path argument.\n   */\n  number\n][] = [\n  ['copyFile', 0],\n  ['createDirectory', 0],\n  ['createReadStream', 0],\n  ['createWriteStream', 0],\n  ['customRequest', 0],\n  ['deleteFile', 0],\n  ['exists', 0],\n  ['getDirectoryContents', 0],\n  ['getFileContents', 0],\n  ['getFileDownloadLink', 0],\n  ['getFileUploadLink', 0],\n  ['getHeaders', -1], // No path argument for getHeaders\n  ['getQuota', -1], // No options argument for getQuota\n  ['lock', 0],\n  ['moveFile', 0],\n  ['putFileContents', 0],\n  ['setHeaders', -1], // No path argument for setHeaders\n  ['stat', 0],\n  ['unlock', 0]\n];\n\n/**\n * Wraps a WebDAVClient to throw NextcloudErrors instead of WebDAVClientError.\n * @param client The client to wrap.\n * @returns The wrapped client.\n *\n * @note This function mutates the client.\n * @note This function is idempotent.\n */\nexport function wrapClient(client: WebDAVClient): WebDAVClient {\n  if (client['__ns_wrapped_client__']) {\n    return client;\n  }\n  client['__ns_wrapped_client__'] = true;\n\n  WRAPPED_FUNCTIONS.forEach(([fnName, pathPosition]) => {\n    const originalFn = client[fnName];\n    client[fnName] = async (...args: any[]) => {\n      try {\n        return await originalFn.apply(client, args);\n      } catch (error) {\n        throw wrapError(error, pathPosition === -1 ? undefined : args[pathPosition]);\n      }\n    };\n  });\n\n  return client;\n}\n\n/**\n * Wraps a WebDAVClientError to throw NextcloudErrors instead.\n * @param error The error to wrap.\n * @param path The path of the operation that failed.\n * @returns The wrapped error.\n */\nexport function wrapError(error: Error, path?: string): Error {\n  if (!isWebDavError(error)) {\n    return error;\n  }\n\n  if (isNotFoundError(error)) {\n    return new NotFoundError(path)\n  }\n\n  if (isForbiddenError(error)) {\n    return new ForbiddenError(path);\n  }\n\n  if (isConflictError(error)) {\n    return new ConflictError(path);\n  }\n\n  return new NextCloudServerException('A WebDav Error occured', error);\n}\n\n/**\n * Checks if the given error is a WebDAVClientError.\n * @param error The error to check.\n * @returns True if the error is a WebDAVClientError.\n */\nfunction isWebDavError(error: any): error is WebDAVClientError {\n  return error && (error.response || error.status);\n}\n\n/**\n * Checks if the given error is a NotFoundError.\n * @param error The error to check.\n * @returns True if the error is a NotFoundError.\n */\nfunction isNotFoundError(error: WebDAVClientError): error is { status: 404 } & WebDAVClientError {\n  return error.status === 404;\n}\n\n/**\n * Checks if the given error is a ForbiddenError.\n * @param error The error to check.\n * @returns True if the error is a ForbiddenError.\n */\nfunction isForbiddenError(error: WebDAVClientError): error is { status: 403 } & WebDAVClientError {\n  return error.status === 403;\n}\n\n/**\n * Checks if the given error is a ConflictError.\n * @param error The error to check.\n * @returns True if the error is a ConflictError.\n */\nfunction isConflictError(error: WebDAVClientError): error is { status: 409 } & WebDAVClientError {\n  return error.status === 409;\n}\n\n","import { BadArgumentError } from './errors'\n\nexport type NAMESPACE = {\n  full: string;\n  short: string;\n  elements: readonly string[];\n}\n\nexport type ShortCodes = typeof NAMESPACES[number][\"short\"];\nexport type ShortCodeToNamespace = {\n  [key in ShortCodes]: typeof NAMESPACES[number] & { short: key };\n}\n\nexport type ShortCodeElements<TShortCode extends ShortCodes> = \"elements\" extends keyof ShortCodeToNamespace[TShortCode]\n  ? ShortCodeToNamespace[TShortCode]['elements']\n  : never;\n\nexport type DetailProperty<\n  TShortCode extends ShortCodes,\n  TElement extends ShortCodeElements<TShortCode> | string\n> = {\n  namespaceShort: TShortCode,\n  namespace: TElement,\n  element: string,\n  default?: any\n}\n\nexport type ExtractDetailProperties<TDetails extends DetailProperty<any,any>[]> = TDetails[number]['namespace']\n\n/**\n * All known namespaces and their elements that are used in the Nextcloud WebDAV API.\n * @see https://docs.nextcloud.com/server/latest/developer_manual/client_apis/WebDAV/basic.html#supported-properties\n */\nconst NAMESPACES = [\n  {\n    short: \"d\",\n    full: \"DAV:\",\n    elements: [\n      \"creationdate\",\n      \"getlastmodified\",\n      \"getetag\",\n      \"getcontenttype\",\n      \"resourcetype\",\n      \"getcontentlength\",\n      \"getcontentlanguage\",\n      \"displayname\",\n      \"lockdiscovery\",\n      \"supportedlock\",\n    ]\n  },\n  {\n    short: \"oc\",\n    full: \"http://owncloud.org/ns\",\n    elements: [\n      \"id\",\n      \"fileid\",\n      \"downloadURL\",\n      \"permissions\",\n      \"size\",\n      \"quota-used-bytes\",\n      \"quota-available-bytes\",\n      \"tags\",\n      \"favorite\",\n      \"comments-href\",\n      \"comments-count\",\n      \"comments-unread\",\n      \"owner-id\",\n      \"owner-display-name\",\n      \"share-types\",\n      \"checksums\",\n      \"has-preview\",\n      \"rich-workspace-file\",\n      \"rich-workspace\",\n    ]\n  },\n  {\n    short: \"nc\",\n    full: \"http://nextcloud.org/ns\",\n    elements: [\n      \"creation_time\",\n      \"mount-type\",\n      \"is-encrypted\",\n      \"share-attributes\",\n      \"sharees\",\n      \"share-permissions\",\n      \"acl-enabled\",\n      \"acl-can-manage\",\n      \"acl-list\",\n      \"inherited-acl-list\",\n      \"group-folder-id\",\n      \"lock\",\n      \"lock-owner-type\",\n      \"lock-owner\",\n      \"lock-owner-displayname\",\n      \"lock-owner-editor\",\n      \"lock-time\",\n      \"lock-timeout\",\n      \"lock-token\",\n      \"contained-folder-count\",\n      \"contained-file-count\",\n      \"data-fingerprint\",\n      \"upload_time\",\n      \"note\",\n    ]\n  },\n  {\n    short: \"ocs\",\n    full: \"http://open-collaboration-services.org/ns\",\n    elements: [\n      \"share-permissions\",\n    ]\n  },\n  {\n    short: \"ocm\",\n    full: \"http://open-cloud-mesh.org/ns\",\n    elements: [\n      \"share-permissions\",\n    ]\n  },\n] as const;\n\nconst SHORT_CODE_TO_NAMESPACE: ShortCodeToNamespace = NAMESPACES\n  .reduce((acc, namespace) => {\n    acc[namespace.short] = namespace;\n    return acc;\n  }, {} as any);\n\n  /**\n   * Creates a detail property for use with the various WebDAV methods.\n   * @param namespace The namespace short code (e.g. `oc`)\n   * @param element The element name (e.g. `fileid`)\n   * @param defaultValue The default value to return if the property is not found\n   *\n   * @example\n   * const fileidProperty = createDetailProperty('oc', 'fileid');\n   *\n   * const details = await client.getPathInfo('/path/to/file', {\n   *  details: true,\n   *  properties: [\n   *    fileidProperty\n   *  ]\n   * });\n   */\nexport function createDetailProperty<\n  TShortCode extends ShortCodes,\n  TElement extends ShortCodeElements<TShortCode>[number]\n>(\n  namespace: TShortCode,\n  element: TElement,\n  defaultValue?: any\n): DetailProperty<TShortCode, TElement>;\nexport function createDetailProperty<\n  TShortCode extends ShortCodes,\n  TElement extends string\n>(\n  namespace: TShortCode,\n  element: TElement,\n  defaultValue?: any\n): DetailProperty<TShortCode, TElement>;\nexport function createDetailProperty<\n  TShortCode extends ShortCodes\n>(\n  namespace: TShortCode,\n  element: string,\n  defaultValue?: any\n): DetailProperty<TShortCode, string> {\n  if (!SHORT_CODE_TO_NAMESPACE[namespace]) {\n    throw new BadArgumentError(`Unknown namespace shortcode: ${namespace}`);\n  }\n\n  return {\n    namespaceShort: namespace,\n    namespace: SHORT_CODE_TO_NAMESPACE[namespace].full,\n    element,\n    default: defaultValue\n  };\n}\n\n/**\n * Converts a list of detail properties to an XML string.\n * @param details The prperties to convert to XML\n * @returns An XML string\n *\n * @note This is used internally by the client, but is exposed for use with the `propfind` method.\n * @see https://docs.nextcloud.com/server/latest/developer_manual/client_apis/WebDAV/basic.html#requesting-properties\n *\n * @example\n * const details = [\n * createDetailProperty('oc', 'fileid'),\n * createDetailProperty('oc', 'permissions'),\n * ];\n *\n * const xml = fileDetailsToXMLString(details);\n * // `<?xml version=\"1.0\" encoding=\"UTF-8\"?><d:propfind xmlns:d=\"DAV:\" xmlns:oc=\"http://owncloud.org/ns\"><d:prop><oc:fileid /><oc:permissions /></d:prop></d:propfind>`\n */\nexport function fileDetailsToXMLString(details: DetailProperty<any, any>[]) {\n  const namespaces = [\n    ...new Set(\n      details\n        .map(detail => detail.namespaceShort)\n        .concat('d')\n    )\n  ]\n    .map(short => `xmlns:${short}=\"${SHORT_CODE_TO_NAMESPACE[short].full}\"`);\n\n  const elements = details.map(detail => `<${detail.namespaceShort}:${detail.element} />`);\n\n  return `<?xml version=\"1.0\" encoding=\"UTF-8\"?><d:propfind ${namespaces.join(' ')}><d:prop>${elements.join('\\n')}</d:prop></d:propfind>`;\n}\n","import * as Stream from \"stream\"\n\nimport { Result, Optional } from \"lonad\";\n\nimport type {\n  WebDAVClientOptions,\n  StatOptions,\n  BufferLike,\n  CreateDirectoryOptions,\n  CreateReadStreamOptions,\n  CreateWriteStreamOptions,\n  FileStat,\n  GetDirectoryContentsOptions,\n  GetFileContentsOptions,\n  PutFileContentsOptions,\n  ResponseDataDetailed,\n  WebDAVMethodOptions,\n  WebDAVClient as WebDAVClientType,\n} from \"webdav\";\n\n\nimport { BadArgumentError } from \"./errors\";\n\nimport { wrapClient, wrapError } from \"./webdav.wrapper\";\n\nimport {\n  DetailProperty,\n  fileDetailsToXMLString,\n  createDetailProperty,\n  ExtractDetailProperties,\n} from \"./webdav.utils\";\n\nconst defaultProperties = [\n  createDetailProperty(\"d\", \"creationdate\"),\n  createDetailProperty(\"d\", \"getlastmodified\"),\n  createDetailProperty(\"d\", \"getetag\"),\n  createDetailProperty(\"d\", \"resourcetype\"),\n  createDetailProperty(\"d\", \"getcontentlength\"),\n  createDetailProperty(\"d\", \"getcontenttype\"),\n  createDetailProperty(\"oc\", \"fileid\"),\n  createDetailProperty(\"oc\", \"owner-id\"),\n];\n\nexport type WebDAVMethodOptionProperties<\n  TPROPS extends DetailProperty<any, any>[]\n> = {\n  properties?: TPROPS;\n};\n\n/**\n * A WebDAV client for specific for Nextcloud instances.\n * @param url The url to the Nextcloud instance.\n * @param options Optional options for the client.\n */\nexport class WebDavClient {\n  private client: WebDAVClientType;\n  private root: string;\n\n  // Empty private constructor to prevent instantiation\n  private constructor() {}\n\n  /**\n   * WebDAV client factory method. Creates a new WebDAV client for the given url.\n   *\n   * @param url The url to the Nextcloud instance.\n   * @param options Optional options for the client.\n   */\n  public static async create(url: string, options: WebDAVClientOptions = {}) {\n    const thisClient = new WebDavClient();\n    thisClient.root = nextCloudPath(options.username);\n    thisClient.client = await thisClient.loadClient(url, options);\n    return thisClient;\n  }\n\n  private async loadClient(url: string, options: WebDAVClientOptions = {}) {\n    // We need to use dynamic imports here since the webdav package only works in esm.\n    // We also need to use the `Function` constructor since the `import` keyword is compiled to `require` by typescript.\n    const webDav = await (Function('return import(\"webdav\");')() as Promise<typeof import(\"webdav\")>);\n\n    if (!webDav) {\n      throw new Error(\"Could not load webdav package\");\n    }\n\n    return wrapClient(\n      webDav.createClient(nextcloudRoot(url, this.root), options)\n    );\n  }\n\n  /**\n   * Returns the path to the root url.\n   */\n  public getPath() {\n    return this.root;\n  }\n\n  /**\n   * Checks whether the client is ready.\n   * @returns A promise that connects to the server.\n   *\n   * @example\n   * checkConnectivity()\n   *    .then(() => console.log('Connected'))\n   *    .catch((error) => console.error(error));\n   */\n  public async checkConnectivity() {\n    return Result.fromPromise(this.client.getDirectoryContents(\"/\"))\n      .map(Boolean)\n      .getOrElse(false);\n  }\n\n  /**\n   * Checks whether the given path exists on the server.\n   * @param path The path to the file or folder\n   * @param options Optional options for the method. See the [WebDAVMethodOptions](https://www.npmjs.com/package/webdav/v/4.11.2#method-options) interface for more information.\n   * @returns\n   * - `true` if the path exists\n   * - `false` if the path does not exist\n   *\n   * @example\n   * exists('/foo/bar')\n   *  .then((exists) => console.log(exists))\n   */\n  public async exists(\n    path: string,\n    options: WebDAVMethodOptions = {}\n  ): Promise<boolean> {\n    return Result.fromPromise((this.client.exists as any)(path, options))\n      .recover(() => false)\n      .toPromise();\n  }\n\n  /**\n   *\n   * @param path The path to the file or folder\n   * @param options Optional options for the method.\n   * @returns A promise that creates the directory.\n   *\n   * @throws {NextcloudError} If an error occurs.\n   *\n   * @example\n   * touchFolder('/foo/bar')\n   *  .then(() => console.log('Folder created'))\n   *  .catch((error) => console.error(error));\n   */\n  public async touchFolder(\n    path: string,\n    options: CreateDirectoryOptions = { recursive: true }\n  ) {\n    return Result.fromPromise(this.exists(path))\n      .reject(Boolean)\n      .expectMap(() => this.client.createDirectory(path, options))\n      .map(() => true)\n      .recover(() => false)\n      .toPromise();\n  }\n\n  /**\n   * Renames a file or folder.\n   * @param path The path to the file or folder\n   * @param newName The new name of the file or folder\n   * @param options Optional options for the method. See the [WebDAVMethodOptions](https://www.npmjs.com/package/webdav/v/4.11.2#method-options) interface for more information.\n   * @returns A promise that renames the file or folder.\n   *\n   * @throws {NextcloudError} If an error occurs.\n   *\n   * @example\n   * rename('/foo/bar', 'baz') // Renames the folder /foo/bar to /foo/baz\n   *  .then(() => console.log('Renamed'))\n   *  .catch((error) => console.error(error));\n   */\n  public async rename(\n    path: string,\n    newName: string,\n    options: WebDAVMethodOptions = {}\n  ): Promise<void> {\n    const basePath = Optional.fromNullable(path)\n      .reject((path) => path === \"\")\n      .map((path) => path.slice(0, path.lastIndexOf(\"/\") + 1));\n\n    const newPath = Optional.fromNullable(newName)\n      .reject((path) => path === \"\")\n      .flatMap((newName) => basePath.map((basePath) => basePath + newName));\n\n    return Result.expect(newPath)\n      .abortOnErrorWith(() => new BadArgumentError(\"New name must not be empty.\"))\n      .map((newPath) => this.move(path, newPath, options))\n      .toPromise();\n  }\n\n  /**\n   * Moves a file or folder.\n   * @param path The path to the file or folder\n   * @param destination The destination path\n   * @param options Optional options for the method. See the [WebDAVMethodOptions](https://www.npmjs.com/package/webdav/v/4.11.2#method-options) interface for more information.\n   * @returns A promise that moves the file or folder.\n   *\n   * @throws {NextcloudError} If an error occurs.\n   *\n   * @example\n   * move('/foo/bar', '/bar/foo') // Moves the folder /foo/bar to /bar/foo\n   *  .then(() => console.log('Moved'))\n   *  .catch((error) => console.error(error));\n   */\n  public async move(\n    path: string,\n    destination: string,\n    options: WebDAVMethodOptions = {}\n  ): Promise<void> {\n    return (this.client.moveFile as any)(path, destination, options);\n  }\n\n  /**\n   * Deletes a file or folder.\n   * @param path The path to the file or folder\n   * @param options Optional options for the method. See the [WebDAVMethodOptions](https://www.npmjs.com/package/webdav/v/4.11.2#method-options) interface for more information.\n   * @returns A promise that deletes the file or folder.\n   *\n   * @throws {NextcloudError} If an error occurs.\n   * @throws {NotFoundError} If the file or folder does not exist.\n   *\n   * @example\n   * remove('/foo/bar') // Deletes the folder /foo/bar\n   *    .then(() => console.log('Deleted'))\n   *    .catch((error) => console.error(error));\n   */\n  public async remove(\n    path: string,\n    options: WebDAVMethodOptions = {}\n  ): Promise<void> {\n    return (this.client.deleteFile as any)(path, options);\n  }\n\n  /**\n   *\n   * @param path The path to the file or folder\n   * @param content The content to write to the file\n   * @param options Optional options for the method. See the [PutFileContentsOptions](https://www.npmjs.com/package/webdav/v/4.11.2#user-content-putfilecontents) interface for more information.\n   * @returns A promise that writes the content to the file.\n   *  `true` if the file was written.\n   *  `false` otherwise.\n   */\n  public async put(\n    path: string,\n    content: string | BufferLike | Stream.Readable,\n    options?: PutFileContentsOptions\n  ) {\n    return this.client.putFileContents(path, content, options);\n  }\n\n  /**\n   * Gets the content of a file.\n   * @param path The path to the file\n   * @param options The options for the method. See the [GetFileContentsOptions](https://www.npmjs.com/package/webdav/v/4.11.2#user-content-getfilecontents) interface for more information.\n   * @returns A promise that gets the content of the file.\n   */\n  public async get(path: string, options?: GetFileContentsOptions) {\n    return this.client.getFileContents(path, options);\n  }\n\n  /**\n   * Creates a folder at the given path. Nested or non-existent folders will be created.\n   * @param path The path to the file or folder\n   * @returns A promise that creates the folder.\n   *\n   * @deprecated Use `touchFolder` instead.\n   * @example\n   *\n   * createFolder('/foo/bar') // Creates the folder /foo/bar\n   */\n  public async createFolderHierarchy(path: string): Promise<boolean> {\n    return this.touchFolder(path, { recursive: true });\n  }\n\n  /**\n   * Get all files and folders in the given folder.\n   * @param path The path to the file or folder\n   * @param options Optional options for the method.\n   * @returns A promise that gets the files and folders in the given folder.\n   *\n   * @throws {NextcloudError} If an error occurs.\n   * @throws {NotFoundError} If the folder does not exist.\n   *\n   * @example\n   * getFilesDetailed('/foo/bar') // Gets all files and folders in /foo/bar\n   */\n  public async getFilesDetailed<TProps extends DetailProperty<any, any>[]>(\n    path: string,\n    options: GetDirectoryContentsOptions & {\n      details: true;\n    } & WebDAVMethodOptionProperties<TProps>\n  ): Promise<\n    ResponseDataDetailed<\n      (FileStat & { props: Record<ExtractDetailProperties<TProps>, any> })[]\n    >\n  >;\n  public async getFilesDetailed(\n    path: string,\n    options: GetDirectoryContentsOptions & { details?: false | undefined }\n  ): Promise<FileStat[]>;\n  public async getFilesDetailed(\n    path: string,\n    options?: GetDirectoryContentsOptions\n  ): Promise<FileStat[]>;\n  public async getFilesDetailed(\n    path: string,\n    options: GetDirectoryContentsOptions = {}\n  ) {\n    const formattedOptions = formatOptions(options);\n\n    return Result.fromPromise(\n      this.client.getDirectoryContents(path, formattedOptions)\n    )\n      .map((result) => {\n        if (isDetailedResult(result)) {\n          result.data = result.data.map((file) => ({\n            ...file,\n            props: setDefaults(file, formattedOptions.properties),\n          }));\n        } else {\n          result = result.map((file) => ({\n            ...file,\n            props: setDefaults(file, formattedOptions.properties),\n          }));\n        }\n\n        return result;\n      })\n      .toPromise();\n  }\n\n  /**\n   * Get all files and folders in the given folder.\n   * @param path The path to the file or folder\n   * @returns A promise that gets all files and folders in the given folder.\n   *\n   * @throws {NextcloudError} If an error occurs.\n   * @throws {NotFoundError} If the folder does not exist.\n   *\n   * @deprecated Use `getFilesDetailed` instead.\n   *\n   * @example\n   * getFiles('/foo/bar') // Gets all files and folders in /foo/bar\n   */\n  public async getFiles(path: string): Promise<string[]> {\n    return Result.fromPromise(this.getFilesDetailed(path, { details: false }))\n      .map((files) => files.map((file) => file.basename))\n      .toPromise();\n  }\n\n  /**\n   * Get all file and folder details in the given folder.\n   * @param path The path to the file or folder\n   * @returns A promise that gets all files and folders in the given folder.\n   *\n   * @throws {NextcloudError} If an error occurs.\n   * @throws {NotFoundError} If the folder does not exist.\n   *\n   * @deprecated Use `getFilesDetailed` instead.\n   *\n   * @example\n   * getFolderFileDetails('/foo/bar') // Gets all files and folders in /foo/bar\n   */\n  public async getFolderFileDetails(\n    path: string,\n    extraProperties?: DetailProperty<any, string>[]\n  ) {\n    return Result.fromPromise(\n      this.getFilesDetailed(path, {\n        details: true,\n        properties: extraProperties,\n      })\n    )\n      .map((files) => files.data)\n      .map((files) =>\n        files.map((file) => ({\n          ...file,\n          isFile: file.type === \"file\",\n          isDirectory: file.type === \"directory\",\n          lastModified: file.lastmod,\n          href: `${this.root}${path}/${file.basename}`,\n          name: file.basename,\n          extraProperties: (file.props || {}) as typeof file.props,\n        }))\n      )\n      .toPromise();\n  }\n\n  /**\n   * Get the details of a file or folder.\n   * @param path The path to the file or folder\n   * @param options Optional options for the method.\n   * @returns A promise that gets the details of the file or folder.\n   *\n   * @throws {NextcloudError} If an error occurs.\n   * @throws {NotFoundError} If the file or folder does not exist.\n   *\n   * @example\n   * getPathInfo('/foo/bar') // Gets the details of /foo/bar\n   */\n  public async getPathInfo<TProps extends DetailProperty<any, any>[]>(\n    path: string,\n    options: StatOptions & {\n      details: true;\n    } & WebDAVMethodOptionProperties<TProps>\n  ): Promise<\n    ResponseDataDetailed<\n      FileStat & { props: Record<ExtractDetailProperties<TProps>, any> }\n    >\n  >;\n  public async getPathInfo(\n    path: string,\n    options: StatOptions & { details?: false | undefined }\n  ): Promise<FileStat>;\n  public async getPathInfo(\n    path: string,\n    options?: StatOptions\n  ): Promise<FileStat>;\n  public async getPathInfo(path: string, options: StatOptions = {}) {\n    const formattedOptions = formatOptions(options);\n\n    return Result.fromPromise(this.client.stat(path, formattedOptions))\n      .map((result) => {\n        if (isDetailedResult(result)) {\n          result.data.props = setDefaults(\n            result.data,\n            formattedOptions.properties\n          );\n        } else {\n          result.props = setDefaults(result, formattedOptions.properties);\n        }\n\n        return result;\n      })\n      .toPromise();\n  }\n\n  /**\n   * Get the details of a file or folder.\n   * @param path The path to the file or folder\n   * @param extraProperties The extra properties to get\n   * @returns A promise that gets the details of the file or folder.\n   *\n   * @deprecated Use `getPathInfo` instead.\n   */\n  public async getFolderProperties(\n    path: string,\n    extraProperties?: DetailProperty<any, string>[]\n  ): Promise<FileStat & Record<string, any>> {\n    const res = await this.getPathInfo(path, {\n      details: true,\n      properties: extraProperties,\n    });\n    const data = Result.expect(res.data)\n      .map((data) => ({\n        ...data,\n        ...extraProperties.reduce(\n          (acc, curr) => ({\n            ...acc,\n            [`${curr.namespaceShort}:${curr.element}`]:\n              data.props[curr.element],\n          }),\n          {}\n        ),\n      }))\n      .getOrElse(res.data);\n\n    return data;\n  }\n\n  /**\n   * Get a read stream for a file.\n   * @param path The path to the file or folder\n   * @param options Optional options for the method.\n   * @returns A promise which returns a read stream.\n   *\n   * @note Although the stream is returned immediately, the stream will only start downloading once the stream is connected to a destination.\n   */\n  public async getReadStream(\n    path: string,\n    options?: CreateReadStreamOptions\n  ): Promise<Stream.Readable> {\n    const readStream = new Stream.PassThrough();\n\n    await this.get(path, { details: false });\n\n    const remoteReadStream = await this.client.createReadStream(path, options);\n    remoteReadStream.pipe(readStream);\n\n    remoteReadStream.on(\"error\", (err) =>\n      readStream.emit(\"error\", wrapError(err, path))\n    );\n\n    return readStream;\n  }\n\n  /**\n   * Get a write stream for a file.\n   * @param path The path to the file or folder\n   * @param options Optional options for the method.\n   * @returns A promise which returns a write stream.\n   *\n   * @note Although the stream is returned immediately, the stream will only start uploading once the stream is connected to a destination.\n   * @note The write stream will only start uploading once the stream is closed.\n   * @note The write stream will emit a `finished` event once the upload has finished.\n   */\n  public async getWriteStream(\n    path: string,\n    options?: CreateWriteStreamOptions & { onFinished: () => void }\n  ): Promise<Stream.Writable> {\n    const writeStream = new Stream.PassThrough();\n    const { overwrite = false, ...otherOptions } = options ?? {};\n\n    await this.put(path, \"\", { overwrite, ...otherOptions });\n\n    this.put(path, writeStream, { overwrite, ...otherOptions })\n      .then(() => options?.onFinished())\n      .catch((err) => writeStream.emit(\"error\", wrapError(err)));\n\n    return writeStream;\n  }\n\n  /**\n   * Upload to a file from a stream.\n   * @param path The path to the file\n   * @param readStream The read stream to upload\n   * @returns A promise that uploads the given stream to the given path.\n   */\n  public async uploadFromStream(\n    path: string,\n    readStream: Stream.Readable\n  ): Promise<void> {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const writeStream = await this.getWriteStream(path, {\n          overwrite: true,\n          onFinished: () => resolve(),\n        });\n\n        writeStream.on(\"error\", (err) => reject(err));\n\n        return await pipeStreams(readStream, writeStream);\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n\n  /**\n   * Download a file to a stream.\n   * @param path The path to the file\n   * @param writeStream The write stream to download to\n   * @returns A promise that downloads the given path to the given stream.\n   */\n  public async downloadToStream(\n    path: string,\n    writeStream: Stream.Writable\n  ): Promise<void> {\n    const readStream = await this.getReadStream(path);\n\n    await pipeStreams(readStream, writeStream);\n  }\n}\n\n/**\n * Returns the root URL for the Nextcloud instance\n * @param url The Nextcloud instance URL\n * @param username The Nextcloud username\n * @returns The root URL for the Nextcloud instance\n * @private\n *\n * @example\n * nextcloudRoot('https://example.com/nextcloud', 'jack');\n * // => 'https://example.com/nextcloud/remote.php/dav/files/jack/'\n */\nfunction nextcloudRoot(url: string, path: string) {\n  const urlNoTrailingSlash = url.trimEnd().replace(/\\/$/, \"\");\n  const pathNoLeadingSlash = path.trimStart().replace(/^\\//, \"\");\n\n  return `${urlNoTrailingSlash}/${pathNoLeadingSlash}`;\n}\n\nfunction nextCloudPath(username: string) {\n  return `/remote.php/dav/files/${username}`;\n}\n\nfunction formatOptions(\n  options?: WebDAVMethodOptionProperties<any> & {\n    data?: WebDAVMethodOptions[\"data\"];\n    details?: boolean;\n    properties?: DetailProperty<any, any>[];\n  }\n) {\n  if (!options || !options.details) {\n    return options;\n  }\n\n  const props = defaultProperties.concat(options.properties ?? []);\n  const data = !options.data\n    ? Result.expect(props)\n        .filter((properties) => properties.length > 0)\n        .map((properties) => fileDetailsToXMLString(properties as any))\n        .getOrElse(options.data)\n    : options.data;\n\n  return {\n    ...options,\n    data: data,\n    properties: props,\n  };\n}\n\n/**\n * Sets the defaults for the given result\n * @param result The result to set the defaults for\n * @param props The properties to set the defaults for\n * @returns The result with the defaults set\n */\nfunction setDefaults(result: FileStat, props: DetailProperty<any, any>[]) {\n  return {\n    ...props?.reduce(\n      (acc, curr) => ({\n        ...acc,\n        [curr.element]: curr.default,\n      }),\n      {}\n    ),\n    ...result.props,\n  };\n}\n\n/**\n * Checks if the given result is a detailed result\n * @param result The result to check\n * @returns Whether the result is a detailed result\n */\nfunction isDetailedResult<TResult>(\n  result: TResult | {}\n): result is ResponseDataDetailed<any> {\n  return result.hasOwnProperty(\"data\") && result.hasOwnProperty(\"status\");\n}\n\n/**\n * Pipes a read stream to a write stream\n * @param readStream The read stream\n * @param writeStream The write stream\n * @returns A promise that resolves when the streams have been piped\n */\nasync function pipeStreams(\n  readStream: Stream.Readable,\n  writeStream: Stream.Writable\n): Promise<void> {\n  return new Promise((resolve, reject) => {\n    readStream.on(\"error\", fail);\n    writeStream.on(\"error\", fail);\n\n    // event from WebDav.Stream's deprecated request in case of uploadFromStream\n    writeStream.on(\"end\", resolve);\n\n    // event from Node.js write stream in case of downloadToStream\n    writeStream.on(\"close\", resolve);\n\n    readStream.pipe(writeStream);\n\n    function fail(error: Error) {\n      reject(wrapError(error));\n    }\n  });\n}\n","import { NotFoundError } from './errors';\nimport type { NextcloudClientInterface }         from './types';\nimport { createDetailProperty } from './webdav.utils';\n\nexport async function getCreatorByPath(path: string) : Promise<string> {\n  const self: NextcloudClientInterface = this;\n\n  let result = null;\n\n  try {\n    const folderProperties = await self.getPathInfo(path, {\n      details: true,\n      properties: [\n        createDetailProperty('oc', 'fileid')\n      ]\n    });\n\n    const fileId = folderProperties.data.props.fileid as string;\n    result = await self.getCreatorByFileId(fileId);\n  } catch {\n    result = Promise.reject(new NotFoundError(`Unable to find the creator for '${path}'`));\n  }\n\n  return result;\n}\n\nexport async function getCreatorByFileId(fileId: number | string) : Promise<string> {\n  const self: NextcloudClientInterface = this;\n\n  let result = null;\n\n  try {\n    const activities = await self.activities.get(fileId, 'asc', 1);\n    const fileCreatedActivity = activities\n    .find(activity => activity.type === 'file_created');\n\n    result = fileCreatedActivity.user;\n  } catch {\n    result = Promise.reject(new NotFoundError(`Unable to find the creator for fileId '${fileId}'`));\n  }\n\n  return result;\n}\n","export interface OcsActivity {\n  activityId:  number;\n  app:         string;\n  type:        string;\n  user:        string;\n  subject:     string;\n  subjectRich: [];\n  message:     string;\n  messageRich: [];\n  objectType:  string;\n  fileId:      number;\n  objectName:  string;\n  objects:     {};\n  link:        string;\n  icon:        string;\n  datetime:    Date;\n}\n\nexport interface OcsUser {\n  id:          string;\n  enabled:     boolean;\n  lastLogin:   number;\n  email:       string;\n  displayname: string;\n  phone:       string;\n  address:     string;\n  website:     string;\n  twitter:     string;\n  groups:      string[];\n  language:    string;\n  locale:      string;\n}\n\nexport interface OcsNewUser {\n  userid:       string;\n  password?:    string;\n  email?:       string;\n  displayName?: string;\n  groups?:      string[];\n  subadmin?:    string[];\n  quota?:       number;\n  language?:    string;\n}\n\nexport type OcsEditUserField =\n  'password'    |\n  'email'       |\n  'displayname' |\n  'quota'       |\n  'phone'       |\n  'address'     |\n  'website'     |\n  'twitter'     |\n  'locale'      |\n  'language'    ;\n\nexport interface OcsHttpError {\n  code:         number;\n  message:      string;\n  meta?: {\n    status:     string;\n    statuscode: number;\n    message:    string;\n  };\n}\n\nexport enum OcsShareType {\n  user                = 0,\n  group               = 1,\n  publicLink          = 3,\n  federatedCloudShare = 6,\n}\n\nexport enum OcsSharePermissions {\n  default = -1,\n  read    =  1,\n  update  =  2,\n  create  =  4,\n  delete  =  8,\n  share   = 16,\n  all     = 31,\n}\n\nexport interface OcsShare {\n  id:                    number;\n  shareType:             OcsShareType;\n  shareTypeSystemName:   string;\n  ownerUserId:           string;\n  ownerDisplayName:      string;\n  permissions:           OcsSharePermissions;\n  permissionsText:       string;\n  sharedOn:              Date;\n  sharedOnTimestamp:     number;\n  parent:                string;\n  expiration:            Date;\n  token:                 string;\n  fileOwnerUserId:       string;\n  fileOwnerDisplayName:  string;\n  note:                  string;\n  label:                 string;\n  path:                  string;\n  itemType:              'file' | 'folder';\n  mimeType:              string;\n  storageId:             string;\n  storage:               number;\n  fileId:                number;\n  parentFileId:          number;\n  fileTarget:            string;\n  sharedWith:            string;\n  sharedWithDisplayName: string;\n  mailSend:              boolean;\n  hideDownload:          boolean;\n  password?:             string;\n  sendPasswordByTalk?:   boolean;\n  url?:                  string;\n}\n\nexport type OcsEditShareField =\n  'permissions'     |\n  'password'        |\n  'publicUpload'    |\n  'expireDate'      |\n  'note'            ;\n\nexport interface OcsGroupfolderManageRule {\n  type:        'group' | 'user'\n  id:          string;\n  displayname: string;\n}\n\nexport interface OcsGroupfolder {\n  id:         number;\n  mountPoint: string;\n  groups:     Record<string, number>;\n  quota:      number;\n  size:       number;\n  acl:        boolean;\n  manage?:    OcsGroupfolderManageRule[];\n}\n","import { OcsSharePermissions } from './types';\nimport { OcsError }            from '../errors';\n\nexport interface ErrorInfo {\n  expectedErrorCodes?: number[];\n  customErrors?:    { [key: number]: string };\n  identifier?:     string | number;\n  message:         string;\n  useMeta:         boolean;\n}\n\ntype OmitLastParameter<TFn extends (...args: any[]) => any> = Parameters<TFn> extends [...infer PARAMS, any] ? PARAMS : Parameters<TFn>;\ntype LastParameter<TFn extends (...args: any[]) => any> = Parameters<TFn> extends [...any[], infer LAST] ? LAST : never;\n\ntype ExtractDataTypeFromCallback<TArgument> =\n  TArgument extends (err: any, data: infer TData) => any\n    ? TData\n    : never;\n\nexport function rejectWithOcsError(\n  error,\n  errorInfo: ErrorInfo\n) : Promise<never> {\n  let reason = error.message;\n  let statusCode = '';\n  if ((\n      errorInfo.expectedErrorCodes === undefined ||\n      errorInfo.expectedErrorCodes.includes(error.code)\n    ) && (\n      (errorInfo.useMeta && error.meta && error.meta.statuscode) ||\n      !errorInfo.useMeta\n  )) {\n    statusCode = (errorInfo.useMeta ? error.meta.statuscode : error.code);\n    reason = (errorInfo.useMeta ? error.meta.message : reason);\n\n    if (errorInfo.customErrors && errorInfo.customErrors.hasOwnProperty(statusCode)) {\n      reason = errorInfo.customErrors[statusCode];\n    }\n  }\n\n  return Promise.reject(new OcsError({\n    reason,\n    statusCode,\n    message: errorInfo.message,\n    identifier: errorInfo.identifier\n  }));\n}\n\nexport function assignDefined(target, ...sources) {\n  for (const source of sources) {\n    for (const key of Object.keys(source)) {\n      const val = source[key];\n      if (val !== undefined) {\n        target[key] = val;\n      }\n    }\n  }\n}\n\nexport function ocsSharePermissionsToText(permissions: OcsSharePermissions) : string {\n  if (permissions === OcsSharePermissions.default) {\n    return '';\n  }\n  if (permissions === OcsSharePermissions.all) {\n    return 'all';\n  }\n\n  const result = [];\n  Object.keys(OcsSharePermissions).forEach(key => {\n    if (OcsSharePermissions[key] !== OcsSharePermissions.default && OcsSharePermissions[key] !== OcsSharePermissions.all) {\n      if ((permissions & OcsSharePermissions[key]) === OcsSharePermissions[key]) {\n        result.push(key);\n      }\n    }\n  });\n\n  return result.join('|');\n}\n\n/**\n * Promisify a function that takes a callback as its last parameter\n * @param fn The function to promisify\n * @returns A function that returns a promise\n *\n * @note This is a simple replacement for the `promisify` function from the `util` package which is not available in the browser (unless you polyfill it)\n */\nexport function promisify<\n  TFn extends (...args: any[]) => any,\n  CallbackData = ExtractDataTypeFromCallback<LastParameter<TFn>>\n>(fn: TFn): (...args: OmitLastParameter<TFn>) => Promise<CallbackData> {\n  return function (...args) {\n    const self = this;\n\n    return new Promise((resolve, reject)=> {\n      fn.call(self, ...args, function(err, res){\n        if (err) {\n          reject(err);\n        } else {\n          resolve(res);\n        }\n      })\n    })\n  }\n}\n","import axios, { type AxiosError, type AxiosRequestConfig, type AxiosResponse } from 'axios';\n\n/**\n * Request wrapper.\n * @note Wrapper around axios to make it easier to use.\n */\nexport function req(options: AxiosRequestConfig, callback: (error?: any, response?: AxiosResponse, body?: any) => any): void {\n  axios({\n    method: 'GET',\n    validateStatus: () => true,\n    ...options\n  })\n    .then(async response =>  {\n      callback(null, response, response?.data);\n    })\n    .catch((error: AxiosError) => {\n      callback(error, null, null);\n    });\n}\n","import { OcsConnection } from './ocs-connection';\nimport { OcsActivity } from './types';\nimport { req } from '../requestWrapper';\n\nconst baseUrl = 'ocs/v2.php/apps/activity/api/v2/activity';\n\nexport function ocsGetActivities(\n  fileId: number,\n  sort: 'asc' | 'desc',\n  limit: number,\n  sinceActivityId: number,\n  callback: (error: { code, message }, activities?: OcsActivity[]) => void\n) : void {\n  const self: OcsConnection = this;\n\n  const params = {\n    format: 'json',\n    object_type: 'files',\n    object_id: fileId,\n    sort: (sort === 'asc' ? 'asc' : 'desc')\n  };\n\n  if (limit > 0) {\n    params['limit'] = limit;\n  }\n\n  if (sinceActivityId > 0) {\n    params['since'] = sinceActivityId;\n  }\n\n  const urlParams =  new URLSearchParams(params as any)\n    .toString()\n\n  req({\n      url: `${self.options.url}/${baseUrl}/filter?${urlParams}`,\n      headers: self.getHeader()\n    }, (error, response, body) => {\n      self.request(error, response, body, (error: { code, message }, body?) => {\n        let activities: OcsActivity[] = [];\n\n        if (!error && body && body.data && body.data.length > 0) {\n          body.data.forEach(activity => {\n            activities.push({\n              activityId: parseInt(activity.activity_id, 10),\n              app: activity.app,\n              type: activity.type,\n              user: activity.user,\n              subject: activity.subject,\n              subjectRich: activity.subject_rich,\n              message: activity.message,\n              messageRich: activity.message_rich,\n              objectType: activity.object_type,\n              fileId: activity.objectId,\n              objectName: activity.object_name,\n              objects: activity.objects,\n              link: activity.link,\n              icon: activity.icon,\n              datetime: activity.datetime\n            });\n          });\n        }\n\n        callback(error, activities);\n      });\n    });\n}\n","import { AxiosResponse } from 'axios';\nimport type { ConnectionOptions } from '../types';\nimport { OcsHttpError }      from './types';\n\nexport class OcsConnection {\n  options : ConnectionOptions;\n\n  constructor(url: string)\n  constructor(options : ConnectionOptions)\n  constructor(options : string | ConnectionOptions) {\n    if (options.constructor === String) {\n      // tslint:disable-next-line: no-parameter-reassignment\n      options = { url: options as string };\n    }\n    this.options = options as ConnectionOptions;\n\n    if (this.options.url.lastIndexOf('/') === this.options.url.length - 1) {\n      this.options.url = this.options.url.substring(0, this.options.url.length - 1);\n    }\n  }\n\n  getHeader(withBody?: boolean) {\n    const credentials = Buffer.from(`${this.options.username}:${(this.options.password ? this.options.password : '')}`).toString('base64');\n    const header = {\n      'Content-Type': (withBody ? 'application/json' : 'application/x-www-form-urlencoded'),\n      'OCS-APIRequest' : 'true',\n      Accept: 'application/json',\n      Authorization: `Basic ${credentials}`\n    };\n\n    return header;\n  }\n\n  isValidResponse(body) : boolean {\n    return (body && body.ocs && body.ocs.meta);\n  }\n\n  request(error, response: AxiosResponse, body: string | object | undefined, callback: (error: OcsHttpError, body?: any) => any) {\n    if (error) {\n      callback(error, null);\n      return;\n    }\n\n    let jsonBody;\n\n    if (typeof body === 'object') {\n      jsonBody = body;\n    } else {\n      try {\n        jsonBody = JSON.parse(body || '{}');\n      } catch {\n        callback({\n          code: 500,\n          message: 'Unable to parse the response body as valid JSON.'\n        });\n      }\n    }\n\n    if (response.status !== 200) {\n      callback({\n        code: response.status,\n        message: response.statusText,\n        meta: (this.isValidResponse(jsonBody) ? jsonBody.ocs.meta : null)\n      }, null);\n\n      return;\n    }\n\n    if (this.isValidResponse(jsonBody)) {\n      // Response is well-formed\n      callback(null, jsonBody.ocs);\n    } else {\n      // Server said everything's fine but response is malformed\n      callback({\n        code: 500,\n        message: 'The server said everything was fine but returned a malformed body. This should never happen.'}\n      );\n    }\n  }\n}\n\nexport default OcsConnection;\n\n","import type {\n  OcsEditUserField,\n  OcsHttpError,\n  OcsNewUser,\n  OcsUser,\n} from './types';\nimport { OcsConnection } from './ocs-connection';\nimport { req } from '../requestWrapper';\n\nconst baseUrl = 'ocs/v2.php/cloud/users';\n\nexport function ocsGetUser(userId: string, callback: (error: OcsHttpError, result?: OcsUser) => void) : void {\n  const self: OcsConnection = this;\n\n  const urlParams = new URLSearchParams({\n    format: 'json'\n  }).toString();\n\n  // fetch(`${self.options.url}/${baseUrl}/${userId}?${urlParams}`, {\n  //   headers: self.getHeader()\n  // })\n  //   .then((response) => {\n  //     response.text()\n  //   })\n  //   .catch((error) => {\n  //     callback(error, null);\n  //   });\n\n  req({\n      url: `${self.options.url}/${baseUrl}/${userId}?${urlParams}`,\n      headers: self.getHeader()\n    }, (error, response, body) => {\n      self.request(error, response, body, (error: OcsHttpError, body?) => {\n        let result: OcsUser = null;\n\n        if (!error && body && body.data) {\n          result = {\n            id: body.data.id,\n            enabled: body.data.enabled,\n            lastLogin: body.data.lastLogin,\n            email: body.data.email,\n            displayname: body.data.displayname,\n            phone: body.data.phone,\n            address: body.data.address,\n            website: body.data.website,\n            twitter: body.data.twitter,\n            groups: body.data.groups,\n            language: body.data.language,\n            locale: body.data.locale\n          };\n        }\n\n        callback(error, result);\n      });\n    });\n}\n\nexport function ocsListUsers(\n  search: string,\n  limit: number,\n  offset: number,\n  callback: (error: OcsHttpError, result?: string[]) => void\n): void {\n  const self: OcsConnection = this;\n\n  const params = {\n    format: 'json',\n  };\n\n  if (search) {\n    params['search'] = search;\n  }\n\n  if (limit > -1) {\n    params['limit'] = limit;\n  }\n\n  if (offset > -1) {\n    params['offset'] = offset;\n  }\n\n  const urlParams = new URLSearchParams(params)\n    .toString();\n\n  req({\n    url: `${self.options.url}/${baseUrl}?${urlParams}`,\n    headers: self.getHeader()\n  }, (error, response, body) => {\n      self.request(error, response, body, (error: OcsHttpError, body?) => {\n      let users: string[] = null;\n\n      if (!error && body && body.data && body.data.users) {\n        users = [];\n        body.data.users.forEach(user => {\n          users.push(user);\n        });\n      }\n\n      callback(error, users);\n    });\n  });\n}\n\nexport function ocsSetUserEnabled(\n  userId: string,\n  isEnabled: boolean,\n  callback: (error: OcsHttpError, result?: boolean) => void\n): void {\n  const self: OcsConnection = this;\n\n  req({\n    url: `${self.options.url}/${baseUrl}/${userId}/${isEnabled ? 'enable' : 'disable'}`,\n    method: 'PUT',\n    headers: self.getHeader()\n  }, (error, response, body) => {\n    self.request(error, response, body, (error: OcsHttpError, body?) => {\n      let success = false;\n      if (!error && body) {\n        success = true;\n      }\n\n      callback(error, success);\n    });\n  });\n}\n\nexport function ocsDeleteUser(userId: string, callback: (error: OcsHttpError, result?: boolean) => void): void {\n  const self: OcsConnection = this;\n\n  req({\n    url: `${self.options.url}/${baseUrl}/${userId}`,\n    method: 'DELETE',\n    headers: self.getHeader()\n  }, (error, response, body) => {\n      self.request(error, response, body, (error: OcsHttpError, body?) => {\n      let userDeleted = false;\n      if (!error && body) {\n        userDeleted = true;\n      }\n\n      callback(error, userDeleted);\n    });\n  });\n}\n\nexport function ocsAddUser(user: OcsNewUser, callback: (error: OcsHttpError, result?: boolean) => void): void {\n  const self: OcsConnection = this;\n\n  // Basic validation\n  if (!user) {\n    callback({ code: 0, message: 'must have a valid OcsNewUser object.' });\n    return;\n  }\n  if (!user.userid) {\n    callback({ code: 0, message: 'user must have an id.' });\n    return;\n  }\n\n  req({\n    url: `${self.options.url}/${baseUrl}`,\n    method: 'POST',\n    headers: self.getHeader(true),\n    data: JSON.stringify(user)\n  }, (error, response, body) => {\n    self.request(error, response, body, (error: OcsHttpError, body?) => {\n      let userAdded = false;\n      if (!error && body) {\n        userAdded = true;\n      }\n\n      callback(error, userAdded);\n    });\n  });\n}\n\nexport function ocsEditUser(\n  userId: string,\n  field: OcsEditUserField,\n  value: string,\n  callback: (error: OcsHttpError, result?: boolean) => void\n): void {\n  const self: OcsConnection = this;\n\n  req({\n    url: `${self.options.url}/${baseUrl}/${userId}`,\n    method: 'PUT',\n    headers: self.getHeader(true),\n    data: JSON.stringify({ value, key: field })\n  }, (error, response, body) => {\n    self.request(error, response, body, (error: OcsHttpError, body?) => {\n      let userEdited = false;\n      if (!error && body) {\n        userEdited = true;\n      }\n\n      callback(error, userEdited);\n    });\n  });\n}\n\nexport function ocsGetUserGroups(userId: string, callback: (error: OcsHttpError, result?: string[]) => void): void {\n  const self: OcsConnection = this;\n\n  // Basic validation\n  if (!userId) {\n    callback({ code: 0, message: 'no userId specified' });\n    return;\n  }\n\n  req({\n    url: `${self.options.url}/${baseUrl}/${userId}/groups`,\n    headers: self.getHeader()\n  }, (error, response, body) => {\n    self.request(error, response, body, (error: OcsHttpError, body?) => {\n      let groups: string[] = null;\n\n      if (!error && body && body.data && body.data.groups) {\n        groups = [];\n        body.data.groups.forEach(group => {\n          groups.push(group);\n        });\n      }\n\n      callback(error, groups);\n    });\n  });\n}\n\nexport function ocsAddRemoveUserForGroup(\n  userId: string,\n  groupId: string,\n  toAdd: boolean,\n  callback: (error: OcsHttpError, result?: boolean) => void\n): void {\n  const self: OcsConnection = this;\n\n  // Basic validation\n  if (!userId) {\n    callback({ code: 0, message: 'no userId specified' });\n    return;\n  }\n\n  req({\n    url: `${self.options.url}/${baseUrl}/${userId}/groups`,\n    method: (toAdd ? 'POST' : 'DELETE'),\n    headers: self.getHeader(true),\n    data: JSON.stringify({ groupid: groupId })\n  }, (error, response, body) => {\n    self.request(error, response, body, (error: OcsHttpError, body?) => {\n      let userModifiedForGroup = false;\n      if (!error && body) {\n        userModifiedForGroup = true;\n      }\n\n      callback(error, userModifiedForGroup);\n    });\n  });\n}\n\nexport function ocsSetUserSubAdmin(\n  userId: string,\n  groupId: string,\n  isSubAdmin: boolean,\n  callback: (error: OcsHttpError, result?: boolean) => void\n): void {\n  const self: OcsConnection = this;\n\n  // Basic validation\n  if (!userId) {\n    callback({ code: 0, message: 'no userId specified' });\n    return;\n  }\n\n  req({\n    url: `${self.options.url}/${baseUrl}/${userId}/subadmins`,\n    method: (isSubAdmin ? 'POST' : 'DELETE'),\n    headers: self.getHeader(true),\n    data: JSON.stringify({ groupid: groupId })\n  }, (error, response, body) => {\n    self.request(error, response, body, (error: OcsHttpError, body?) => {\n      let subAdminModifiedForGroup = false;\n      if (!error && body) {\n        subAdminModifiedForGroup = true;\n      }\n\n      callback(error, subAdminModifiedForGroup);\n    });\n  });\n}\n\nexport function ocsGetUserSubAdmins(userId: string, callback: (error: OcsHttpError, result?: string[]) => void): void {\n  const self: OcsConnection = this;\n\n  // Basic validation\n  if (!userId) {\n    callback({ code: 0, message: 'no userId specified' });\n    return;\n  }\n\n  req({\n    url: `${self.options.url}/${baseUrl}/${userId}/subadmins`,\n    headers: self.getHeader()\n  }, (error, response, body) => {\n    self.request(error, response, body, (error: OcsHttpError, body?) => {\n      let subAdmins: string[] = null;\n\n      if (!error && body && body.data) {\n        subAdmins = [];\n        body.data.forEach(subAdmin => {\n          subAdmins.push(subAdmin);\n        });\n      }\n\n      callback(error, subAdmins);\n    });\n  });\n}\n\nexport function ocsResendUserWelcomeEmail(userId: string, callback: (error: OcsHttpError, result?: boolean) => void): void {\n  const self: OcsConnection = this;\n\n  // Basic validation\n  if (!userId) {\n    callback({ code: 0, message: 'no userId specified' });\n    return;\n  }\n\n  req({\n    url: `${self.options.url}/${baseUrl}/${userId}/welcome`,\n    method: 'POST',\n    headers: self.getHeader()\n  }, (error, response, body) => {\n    self.request(error, response, body, (error: OcsHttpError, body?) => {\n      let success = false;\n      if (!error && body) {\n        success = true;\n      }\n\n      callback(error, success);\n    });\n  });\n}\n","import type {\n  OcsHttpError,\n} from './types';\n\nimport { OcsConnection } from './ocs-connection';\nimport { req } from '../requestWrapper';\n\nconst baseUrl = 'ocs/v2.php/cloud/groups';\n\nexport function ocsListGroups(\n  search: string,\n  limit: number,\n  offset: number,\n  callback: (error: OcsHttpError, result?: string[]) => void\n): void {\n  const self: OcsConnection = this;\n\n  const params = {\n    format: 'json',\n  };\n\n  if (search) {\n    params['search'] = search;\n  }\n\n  if (limit > -1) {\n    params['limit'] = limit;\n  }\n\n  if (offset > -1) {\n    params['offset'] = offset;\n  }\n\n  const urlParams = new URLSearchParams(params)\n    .toString();\n\n  req({\n    url: `${self.options.url}/${baseUrl}?${urlParams}`,\n    headers: self.getHeader()\n  }, (error, response, body) => {\n    self.request(error, response, body, (error: OcsHttpError, body?) => {\n      let result: string[] = null;\n\n      if (!error && body && body.data && body.data.groups) {\n        result = [];\n        body.data.groups.forEach(group => {\n          result.push(group);\n        });\n      }\n\n      callback(error, result);\n    });\n  });\n}\n\nexport function ocsAddGroup(groupId: string, callback: (error: OcsHttpError, result?: boolean) => void): void {\n  const self: OcsConnection = this;\n\n  req({\n    url: `${self.options.url}/${baseUrl}`,\n    method: 'POST',\n    headers: self.getHeader(true),\n    data: JSON.stringify({\n      groupid: groupId\n    })\n  }, (error, response, body) => {\n    self.request(error, response, body, (error: OcsHttpError, body?) => {\n      let groupAdded = false;\n      if (!error && body) {\n        groupAdded = true;\n      }\n\n      callback(error, groupAdded);\n    });\n  });\n}\n\nexport function ocsDeleteGroup(groupId: string, callback: (error: OcsHttpError, result?: boolean) => void): void {\n  const self: OcsConnection = this;\n\n  req({\n    url: `${self.options.url}/${baseUrl}/${groupId}`,\n    method: 'DELETE',\n    headers: self.getHeader(true)\n  }, (error, response, body) => {\n    self.request(error, response, body, (error: OcsHttpError, body?) => {\n      let groupDeleted = false;\n      if (!error && body) {\n        groupDeleted = true;\n      }\n\n      callback(error, groupDeleted);\n    });\n  });\n}\n\nexport function ocsGetGroupUsers(groupId: string, callback: (error: OcsHttpError, result?: string[]) => void): void {\n  const self: OcsConnection = this;\n\n  req({\n    url: `${self.options.url}/${baseUrl}/${groupId}`,\n    headers: self.getHeader()\n  }, (error, response, body) => {\n    self.request(error, response, body, (error: OcsHttpError, body?) => {\n      let users: string[] = null;\n\n      if (!error && body && body.data && body.data.users) {\n        users = [];\n        body.data.users.forEach(user => {\n          users.push(user);\n        });\n      }\n\n      callback(error, users);\n    });\n  });\n}\n\nexport function ocsGetGroupSubAdmins(groupId: string, callback: (error: OcsHttpError, result?: string[]) => void): void {\n  const self: OcsConnection = this;\n\n  req({\n    url: `${self.options.url}/${baseUrl}/${groupId}/subadmins`,\n    headers: self.getHeader()\n  }, (error, response, body) => {\n    self.request(error, response, body, (error: OcsHttpError, body?) => {\n      let subAdmins: string[] = null;\n\n      if (!error && body && body.data) {\n        subAdmins = [];\n        body.data.forEach(subAdmin => {\n          subAdmins.push(subAdmin);\n        });\n      }\n\n      callback(error, subAdmins);\n    });\n  });\n}\n","import {\n  OcsSharePermissions,\n  OcsShareType,\n  type OcsEditShareField,\n  type OcsHttpError,\n  type OcsShare,\n} from './types';\n\nimport { OcsConnection } from './ocs-connection';\nimport { assignDefined, ocsSharePermissionsToText } from './helper';\nimport { req } from '../requestWrapper';\n\nconst baseUrl = 'ocs/v2.php/apps/files_sharing/api/v1/shares';\n\nexport function ocsGetShares(\n  path: string,\n  includeReshares: boolean,\n  showForSubFiles: boolean,\n  callback: (error: OcsHttpError, result?: OcsShare[]) => void\n): void {\n  const self: OcsConnection = this;\n\n  const params = {\n    format: 'json'\n  };\n\n  if (path) {\n    params['path'] = path;\n    params['reshares'] = includeReshares;\n    params['subfiles'] = showForSubFiles;\n  }\n\n  const urlParams = new URLSearchParams(params)\n    .toString();\n\n  req({\n    url: `${self.options.url}/${baseUrl}?${urlParams}`,\n    headers: self.getHeader()\n  }, (error, response, body) => {\n    self.request(error, response, body, (error: OcsHttpError, body?) => {\n      let result: OcsShare[] = null;\n\n      if (!error && body && body.data) {\n        result = [];\n        body.data.forEach(share => {\n          result.push(parseOcsShare(share));\n        });\n      }\n\n      callback(error, result);\n    });\n  });\n}\n\nexport function ocsGetShare(\n  shareId: number | string,\n  callback: (error: OcsHttpError, result?: OcsShare) => void\n): void {\n  const self: OcsConnection = this;\n\n  req({\n    url: `${self.options.url}/${baseUrl}/${shareId}`,\n    headers: self.getHeader()\n  }, (error, response, body) => {\n    self.request(error, response, body, (error: OcsHttpError, body?) => {\n      let result: OcsShare = null;\n\n      if (!error && body && body.data && body.data.length > 0) {\n        result = parseOcsShare(body.data[0]);\n      }\n\n      callback(error, result);\n    });\n  });\n}\n\nexport function ocsDeleteShare(\n  shareId: number | string,\n  callback: (error: OcsHttpError, result?: boolean) => void\n): void {\n  const self: OcsConnection = this;\n\n  req({\n    url: `${self.options.url}/${baseUrl}/${shareId}`,\n    method: 'DELETE',\n    headers: self.getHeader()\n  }, (error, response, body) => {\n      self.request(error, response, body, (error: OcsHttpError, body?) => {\n      let shareDeleted = false;\n      if (!error && body) {\n        shareDeleted = true;\n      }\n\n      callback(error, shareDeleted);\n    });\n  });\n}\n\nexport function ocsAddShare(\n  path: string,\n  shareType: OcsShareType,\n  shareWith: string,\n  permissions: OcsSharePermissions,\n  password: string,\n  publicUpload: boolean,\n  callback: (error: OcsHttpError, result?: OcsShare) => void\n): void {\n  const self: OcsConnection = this;\n\n  const share = {\n    path,\n    shareType,\n  };\n\n  share['publicUpload'] = String(publicUpload);\n\n  if (shareWith) {\n    share['shareWith'] = shareWith;\n  }\n\n  if (permissions && permissions !== OcsSharePermissions.default) {\n    share['permissions'] = permissions;\n  }\n\n  if (password) {\n    share['password'] = password;\n  }\n\n  req({\n    url: `${self.options.url}/${baseUrl}`,\n    method: 'POST',\n    headers: self.getHeader(true),\n    data: JSON.stringify(share)\n  }, (error, response, body) => {\n    self.request(error, response, body, (error: OcsHttpError, body?) => {\n      let result: OcsShare = null;\n      if (!error && body && body.data) {\n        result = parseOcsShare(body.data);\n      }\n\n      callback(error, result);\n    });\n  });\n}\n\nexport function ocsEditShare(\n  shareId: number | string,\n  field: OcsEditShareField,\n  value: string,\n  callback: (error: OcsHttpError, result?: OcsShare) => void\n) {\n  const self: OcsConnection = this;\n\n  req({\n    url: `${self.options.url}/${baseUrl}/${shareId}`,\n    method: 'PUT',\n    headers: self.getHeader(true),\n    data: JSON.stringify({ [field]: value })\n  }, (error, response, body) => {\n    self.request(error, response, body, (error: OcsHttpError, body?) => {\n      let result: OcsShare = null;\n      if (!error && body && body.data) {\n        result = parseOcsShare(body.data);\n      }\n\n      callback(error, result);\n    });\n  });\n}\n\nfunction parseOcsShare(share) {\n  const timestamp = parseInt(share.stime, 10);\n  const permissionsInt = parseInt(share.permissions, 10);\n  const shareTypeInt = parseInt(share.share_type, 10);\n\n  const obj : OcsShare = {\n    id: parseInt(share.id, 10),\n    shareType: shareTypeInt,\n    shareTypeSystemName: OcsShareType[shareTypeInt],\n    ownerUserId: share.uid_owner,\n    ownerDisplayName: share.displayname_owner,\n    permissions: permissionsInt,\n    permissionsText: ocsSharePermissionsToText(permissionsInt),\n    sharedOn: new Date(timestamp * 1000),\n    sharedOnTimestamp: timestamp,\n    parent: share.parent,\n    expiration: share.expiration,\n    token: share.token,\n    fileOwnerUserId: share.uid_file_owner,\n    fileOwnerDisplayName: share.displayname_file_owner,\n    note: share.note,\n    label: share.label,\n    path: share.path,\n    itemType: share.item_type,\n    mimeType: share.mimetype,\n    storageId: share.storage_id,\n    storage: parseInt(share.storage, 10),\n    fileId: parseInt(share.item_source, 10),\n    parentFileId: parseInt(share.file_parent, 10),\n    fileTarget: share.file_target,\n    sharedWith: share.share_with,\n    sharedWithDisplayName: share.share_with_displayname,\n    mailSend: Boolean(share.mail_send),\n    hideDownload: Boolean(share.hide_download),\n  };\n\n  assignDefined(obj, {\n    password: share.password,\n    sendPasswordByTalk: share.send_password_by_talk,\n    url: share.url,\n  });\n\n  return obj;\n}\n","import type {\n  OcsHttpError,\n  OcsGroupfolder,\n} from './types';\n\nimport { OcsConnection } from './ocs-connection';\nimport { req } from '../requestWrapper';\n\nconst baseUrl = 'apps/groupfolders/folders';\n\n// GET apps/groupfolders/folders: Returns a list of all configured groupfolders and their settings\nexport function ocsGetGroupfolders(\n  callback: (error: OcsHttpError, result?: OcsGroupfolder[]) => void\n): void {\n  const self: OcsConnection = this;\n\n  req({\n    url: `${self.options.url}/${baseUrl}`,\n    headers: self.getHeader(true),\n  }, (error, response, body) => {\n    self.request(error, response, body, (error: OcsHttpError, body?) => {\n      let result: OcsGroupfolder[] = null;\n\n      if (!error && body && body.data) {\n        result = [];\n\n        Object.values(body.data).forEach(groupfolder => {\n          result.push(parseOcsGroupfolder(groupfolder));\n        });\n      }\n\n      callback(error, result);\n    });\n  });\n}\n\n// GET apps/groupfolders/folders/$folderId: Return a specific configured groupfolder and its settings\n// returns groupfolder object if found, `null` otherwise\nexport function ocsGetGroupfolder(\n  groupfolderId: number,\n  callback: (error: OcsHttpError, result?: OcsGroupfolder) => void\n): void {\n  const self: OcsConnection = this;\n\n  req({\n    url: `${self.options.url}/${baseUrl}/${groupfolderId}`,\n    headers: self.getHeader(true),\n  }, (error, response, body) => {\n    self.request(error, response, body, (error: OcsHttpError, body?) => {\n      let result: OcsGroupfolder = null;\n\n      if (!error && body && body.data) {\n        result = parseOcsGroupfolder(body.data);\n      }\n\n      callback(error, result);\n    });\n  });\n}\n\n// POST apps/groupfolders/folders: Create a new groupfolder\n// `mountpoint`: The name for the new groupfolder\n// returns new groupfolder id\nexport function ocsAddGroupfolder(\n  mountpoint: string,\n  callback: (error: OcsHttpError, result?: number) => void\n): void {\n  const self: OcsConnection = this;\n\n  const body = {\n    mountpoint,\n  };\n\n  req({\n    url: `${self.options.url}/${baseUrl}`,\n    method: 'POST',\n    headers: self.getHeader(true), //! set `true` for POST requests\n    data: JSON.stringify(body),\n  }, (error, response, body) => {\n    self.request(error, response, body, (error: OcsHttpError, body?) => {\n      let result: number = null;\n\n      if (!error && body && body.data) {\n        result = parseOcsGroupfolderId(body.data);\n      }\n\n      callback(error, result);\n    });\n  });\n}\n\n// DELETE apps/groupfolders/folders/$folderId: Delete a groupfolder\n// returns `true` if successful (even if the groupfolder didn't exist)\nexport function ocsRemoveGroupfolder(\n  groupfolderId: number,\n  callback: (error: OcsHttpError, result?: boolean) => void\n): void {\n  const self: OcsConnection = this;\n\n  req({\n    url: `${self.options.url}/${baseUrl}/${groupfolderId}`,\n    method: 'DELETE',\n    headers: self.getHeader(),\n  }, (error, response, body) => {\n    self.request(error, response, body, (error: OcsHttpError, body?) => {\n      let groupfolderDeleted = false;\n\n      if (!error && body) {\n        groupfolderDeleted = true;\n      }\n\n      callback(error, groupfolderDeleted);\n    });\n  });\n}\n\n// POST apps/groupfolders/folders/$folderId/groups: Give a group access to a groupfolder\n// `group`: The id of the group to be given access to the groupfolder\n// returns `true` if successful (even if the group doesn't exist)\nexport function ocsAddGroupfolderGroup(\n  groupfolderId: number,\n  groupId: string,\n  callback: (error: OcsHttpError, result?: boolean) => void\n): void {\n  const self: OcsConnection = this;\n\n  const body = {\n    group: groupId,\n  };\n\n  req({\n    url: `${self.options.url}/${baseUrl}/${groupfolderId}/groups`,\n    method: 'POST',\n    headers: self.getHeader(true),\n    data: JSON.stringify(body)\n  }, (error, response, body) => {\n    self.request(error, response, body, (error: OcsHttpError, body?) => {\n      let groupfolderGroupAdded = false;\n\n      if (!error && body) {\n        groupfolderGroupAdded = true;\n      }\n\n      callback(error, groupfolderGroupAdded);\n    });\n  });\n}\n\n// DELETE apps/groupfolders/folders/$folderId/groups/$groupId: Remove access from a group to a groupfolder\n// returns `true` if successful (even if the groupfolder didn't exist)\nexport function ocsRemoveGroupfolderGroup(\n  groupfolderId: number,\n  groupId: string,\n  callback: (error: OcsHttpError, result?: boolean) => void\n): void {\n  const self: OcsConnection = this;\n\n  req({\n    url: `${self.options.url}/${baseUrl}/${groupfolderId}/groups/${groupId}`,\n    method: 'DELETE',\n    headers: self.getHeader(),\n  }, (error, response, body) => {\n    self.request(error, response, body, (error: OcsHttpError, body?) => {\n      let groupfolderGroupRemoved = false;\n\n      if (!error && body) {\n        groupfolderGroupRemoved = true;\n      }\n\n      callback(error, groupfolderGroupRemoved);\n    });\n  });\n}\n\n// POST apps/groupfolders/folders/$folderId/groups/$groupId: Set the permissions a group has in a groupfolder\n// `permissions` The new permissions for the group as bitmask of permissions constants\n// e.g. write(6) === update(2) + create(4)\nexport function ocsSetGroupfolderPermissions(\n  groupfolderId: number,\n  groupId: string,\n  permissions: number,\n  callback: (error: OcsHttpError, result?: boolean) => void\n): void {\n  const self: OcsConnection = this;\n\n  const body = {\n    permissions,\n  };\n\n  req({\n    url: `${self.options.url}/${baseUrl}/${groupfolderId}/groups/${groupId}`,\n    method: 'POST',\n    headers: self.getHeader(true),\n    data: JSON.stringify(body),\n  }, (error, response, body) => {\n    self.request(error, response, body, (error: OcsHttpError, body?) => {\n      let groupfolderPermissionsSet = false;\n\n      if (!error && body) {\n        groupfolderPermissionsSet = true;\n      }\n\n      callback(error, groupfolderPermissionsSet);\n    });\n  });\n}\n\n// POST apps/groupfolders/folders/$folderId/acl: Enable/Disable groupfolder advanced permissions\n// `acl`: `true` for enable, `false` for disable.\nexport function ocsEnableOrDisableGroupfolderACL(\n  groupfolderId: number,\n  enable: boolean,\n  callback: (error: OcsHttpError, result?: boolean) => void\n): void {\n  const self: OcsConnection = this;\n\n  const body = {\n    acl: enable ? 1 : 0\n  };\n\n  req({\n    url: `${self.options.url}/${baseUrl}/${groupfolderId}/acl`,\n    method: 'POST',\n    headers: self.getHeader(true),\n    data: JSON.stringify(body),\n  }, (error, response, body) => {\n    self.request(error, response, body, (error: OcsHttpError, body?) => {\n      let groupfolderACLset = false;\n\n      if (!error && body) {\n        groupfolderACLset = true;\n      }\n\n      callback(error, groupfolderACLset);\n    });\n  });\n}\n\n// POST apps/groupfolders/folders/$folderId/manageACL: Grants/Removes a group or user the ability to manage a groupfolders' advanced permissions\n// `mappingId`: the id of the group/user to be granted/removed access to/from the groupfolder\n// `mappingType`: 'group' or 'user'\n// `manageAcl`: true to grants ability to manage a groupfolders' advanced permissions, false to remove\nexport function ocsSetGroupfolderManageACL(\n  groupfolderId: number,\n  type: 'group' | 'user',\n  id: string,\n  manageACL: boolean,\n  callback: (error: OcsHttpError, result?: boolean) => void\n): void {\n  const self: OcsConnection = this;\n\n  const body = {\n    mappingType: type,\n    mappingId: id,\n    manageAcl: manageACL ? 1 : 0\n  };\n\n  req({\n    url: `${self.options.url}/${baseUrl}/${groupfolderId}/manageACL`,\n    method: 'POST',\n    headers: self.getHeader(true),\n    data: JSON.stringify(body),\n  }, (error, response, body) => {\n    self.request(error, response, body, (error: OcsHttpError, body?) => {\n      let groupfolderPermissionsSet = false;\n\n      if (!error && body) {\n        groupfolderPermissionsSet = true;\n      }\n\n      callback(error, groupfolderPermissionsSet);\n    });\n  });\n}\n\n// POST apps/groupfolders/folders/$folderId/quota: Set the quota for a groupfolder in bytes\n// `quota`: The new quota for the groupfolder in bytes, user -3 for unlimited\nexport function ocsSetGroupfolderQuota(\n  groupfolderId: number,\n  quota: number,\n  callback: (error: OcsHttpError, result?: boolean) => void\n): void {\n  const self: OcsConnection = this;\n\n  const body = {\n    quota: Number.isNaN(quota) ? -3 : quota,\n  };\n\n  req({\n    url: `${self.options.url}/${baseUrl}/${groupfolderId}/quota`,\n    method: 'POST',\n    headers: self.getHeader(true),\n    data: JSON.stringify(body),\n  }, (error, response, body) => {\n    self.request(error, response, body, (error: OcsHttpError, body?) => {\n      let groupfolderQuotaSet = false;\n\n      if (!error && body) {\n        groupfolderQuotaSet = true;\n      }\n\n      callback(error, groupfolderQuotaSet);\n    });\n  });\n}\n\n// POST apps/groupfolders/folders/$folderId/mountpoint: Change the name of a groupfolder\n// `mountpoint`: The new name for the groupfolder\nexport function ocsRenameGroupfolder(\n  groupfolderId: number,\n  mountpoint: string,\n  callback: (error: OcsHttpError, result?: boolean) => void\n): void {\n  const self: OcsConnection = this;\n\n  const body = {\n    mountpoint,\n  };\n\n  req({\n    url: `${self.options.url}/${baseUrl}/${groupfolderId}/mountpoint`,\n    method: 'POST',\n    headers: self.getHeader(true),\n    data: JSON.stringify(body),\n  }, (error, response, body) => {\n    self.request(error, response, body, (error: OcsHttpError, body?) => {\n      let groupfolderRenamed = false;\n\n      if (!error && body) {\n        groupfolderRenamed = true;\n      }\n\n      callback(error, groupfolderRenamed);\n    });\n  });\n}\n\nfunction parseOcsGroupfolder(groupfolder): OcsGroupfolder {\n  return {\n    id:         parseInt(groupfolder.id, 10),\n    mountPoint: groupfolder.mount_point,\n    groups:     groupfolder.groups,\n    quota:      groupfolder.quota,\n    size:       groupfolder.size,\n    acl:        groupfolder.acl,\n    manage:     groupfolder.manage,\n  };\n}\n\nfunction parseOcsGroupfolderId(groupfolder): number {\n  return parseInt(groupfolder.id, 10);\n}\n","import { promisify, rejectWithOcsError } from './helper';\nimport { ocsGetActivities }   from './activity';\nimport { OcsConnection }      from './ocs-connection';\n\nimport  {\n  OcsSharePermissions,\n  type OcsEditShareField,\n  type OcsEditUserField,\n  type OcsGroupfolder,\n  type OcsShareType,\n  type OcsActivity,\n  type OcsNewUser,\n  type OcsShare,\n  type OcsUser,\n} from './types';\n\nimport {\n  ocsResendUserWelcomeEmail,\n  ocsAddRemoveUserForGroup,\n  ocsGetUserSubAdmins,\n  ocsSetUserSubAdmin,\n  ocsSetUserEnabled,\n  ocsGetUserGroups,\n  ocsDeleteUser,\n  ocsListUsers,\n  ocsEditUser,\n  ocsAddUser,\n  ocsGetUser,\n} from './user';\n\nimport {\n  ocsGetGroupSubAdmins,\n  ocsGetGroupUsers,\n  ocsDeleteGroup,\n  ocsListGroups,\n  ocsAddGroup,\n} from './group';\n\nimport {\n  ocsDeleteShare,\n  ocsEditShare,\n  ocsGetShares,\n  ocsAddShare,\n  ocsGetShare,\n} from './share';\n\nimport {\n  ocsGetGroupfolders,\n  ocsGetGroupfolder,\n  ocsAddGroupfolder,\n  ocsRemoveGroupfolder,\n  ocsAddGroupfolderGroup,\n  ocsRemoveGroupfolderGroup,\n  ocsEnableOrDisableGroupfolderACL,\n  ocsRenameGroupfolder,\n  ocsSetGroupfolderQuota,\n  ocsSetGroupfolderPermissions,\n  ocsSetGroupfolderManageACL,\n} from './groupfolders';\n\nimport {\n  NextcloudClientInterface,\n  ConnectionOptions,\n} from '../types';\n\nconst promisifiedGetActivities                 = promisify(ocsGetActivities);\n\nconst promisifiedResendUserWelcomeEmail        = promisify(ocsResendUserWelcomeEmail);\nconst promisifiedAddRemoveUserForGroup         = promisify(ocsAddRemoveUserForGroup);\nconst promisifiedGetUserSubAdmins              = promisify(ocsGetUserSubAdmins);\nconst promisifiedSetUserSubAdmin               = promisify(ocsSetUserSubAdmin);\nconst promisifiedSetUserEnabled                = promisify(ocsSetUserEnabled);\nconst promisifiedGetUserGroups                 = promisify(ocsGetUserGroups);\nconst promisifiedDeleteUser                    = promisify(ocsDeleteUser);\nconst promisifiedListUsers                     = promisify(ocsListUsers);\nconst promisifiedEditUser                      = promisify(ocsEditUser);\nconst promisifiedAddUser                       = promisify(ocsAddUser);\nconst promisifiedGetUser                       = promisify(ocsGetUser);\n\nconst promisifiedGetGroupSubAdmins             = promisify(ocsGetGroupSubAdmins);\nconst promisifiedGetGroupUsers                 = promisify(ocsGetGroupUsers);\nconst promisifiedDeleteGroup                   = promisify(ocsDeleteGroup);\nconst promisifiedListGroups                    = promisify(ocsListGroups);\nconst promisifiedAddGroup                      = promisify(ocsAddGroup);\n\nconst promisifiedDeleteShare                   = promisify(ocsDeleteShare);\nconst promisifiedEditShare                     = promisify(ocsEditShare);\nconst promisifiedGetShares                     = promisify(ocsGetShares);\nconst promisifiedGetShare                      = promisify(ocsGetShare);\nconst promisifiedAddShare                      = promisify(ocsAddShare);\n\nconst promisifiedGetGroupfolders               = promisify(ocsGetGroupfolders);\nconst promisifiedGetGroupfolder                = promisify(ocsGetGroupfolder);\nconst promisifiedAddGroupfolder                = promisify(ocsAddGroupfolder);\nconst promisifiedRemoveGroupfolder             = promisify(ocsRemoveGroupfolder);\nconst promisifiedAddGroupfolderGroup           = promisify(ocsAddGroupfolderGroup);\nconst promisifiedRemoveGroupfolderGroup        = promisify(ocsRemoveGroupfolderGroup);\nconst promisifiedEnableOrDisableGroupfolderACL = promisify(ocsEnableOrDisableGroupfolderACL);\nconst promisifiedRenameGroupfolder             = promisify(ocsRenameGroupfolder);\nconst promisifiedSetGroupfolderQuota           = promisify(ocsSetGroupfolderQuota);\nconst promisifiedSetGroupfolderPermissions     = promisify(ocsSetGroupfolderPermissions);\nconst promisifiedSetGroupfolderManageACL       = promisify(ocsSetGroupfolderManageACL);\n\nexport function configureOcsConnection(options: ConnectionOptions): void {\n  const self: NextcloudClientInterface = this;\n\n  self.ocsConnection = new OcsConnection({\n    url:           options.url,\n    username:      options.username,\n    password:      options.password\n  });\n}\n\nexport async function getActivities(\n  connection: OcsConnection,\n  fileId: number | string,\n  sort?: 'asc' | 'desc',\n  limit?: number,\n  sinceActivityId?: number\n) : Promise<OcsActivity[]> {\n  let activities: Promise<OcsActivity[]>;\n\n  try {\n    activities = await promisifiedGetActivities.call(\n      connection,\n      (typeof fileId === 'string' ? parseInt(fileId, 10) : fileId),\n      sort || 'desc',\n      limit || -1,\n      sinceActivityId || -1\n    );\n  } catch (error) {\n    activities = rejectWithOcsError(error, {\n      message: 'Unable to get activities for',\n      identifier: fileId,\n      useMeta: false,\n      customErrors: {\n        [204]: 'The user has selected no activities to be listed in the stream',\n        [304]: 'ETag/If-None-Match are the same or the end of the activity list was reached',\n        [403]: 'The offset activity belongs to a different user or the user is not logged in',\n        [404]: 'The filter is unknown'\n      }\n    });\n  }\n\n  return activities;\n}\n\nexport async function getUser(\n  connection: OcsConnection,\n  userId: string\n) : Promise<OcsUser> {\n  let user: Promise<OcsUser>;\n\n  try {\n    user = await promisifiedGetUser.call(connection, userId);\n  } catch (error) {\n    user = rejectWithOcsError(error, {\n      message: 'Unable to find user',\n      identifier: userId,\n      useMeta: false\n    });\n  }\n\n  return user;\n}\n\nexport async function setUserEnabled(\n  connection: OcsConnection,\n  userId: string,\n  isEnabled: boolean\n): Promise<boolean> {\n  let success: Promise<boolean>;\n\n  try {\n    success = await promisifiedSetUserEnabled.call(connection, userId, isEnabled);\n  } catch (error) {\n    success = rejectWithOcsError(error, {\n      message: `Unable to ${isEnabled ? 'enable' : 'disable'} user`,\n      identifier: userId,\n      useMeta: true,\n      customErrors: {\n        [101]: 'user does not exist'\n      }\n    });\n  }\n\n  return success;\n}\n\nexport async function editUser(\n  connection: OcsConnection,\n  userId: string,\n  field: OcsEditUserField,\n  value: string\n): Promise<boolean> {\n  let userEdited: Promise<boolean>;\n\n  try {\n    userEdited = await promisifiedEditUser.call(connection, userId, field, value);\n  } catch (error) {\n    userEdited = rejectWithOcsError(error, {\n      message: 'Unable to edit user',\n      identifier: userId,\n      useMeta: true,\n      expectedErrorCodes: [400, 401],\n      customErrors: {\n        [101]: 'user not found',\n        [997]: 'possible reasons: Does it exist? Do you have the right permissions? Is the field valid?'\n      }\n    });\n  }\n\n  return userEdited;\n}\n\nexport async function getUserGroups(\n  connection: OcsConnection,\n  userId: string\n): Promise<string[]> {\n  let groups: Promise<string[]>;\n\n  try {\n    groups = await promisifiedGetUserGroups.call(connection, userId);\n  } catch (error) {\n    groups = rejectWithOcsError(error, {\n      message: 'Unable to get groups for user',\n      identifier: userId,\n      useMeta: false\n    });\n  }\n\n  return groups;\n}\n\nexport async function getUserSubAdmins(\n  connection: OcsConnection,\n  userId: string\n): Promise<string[]> {\n  let subAdmins: Promise<string[]>;\n\n  try {\n    subAdmins = await promisifiedGetUserSubAdmins.call(connection, userId);\n  } catch (error) {\n    subAdmins = rejectWithOcsError(error, {\n      message: 'Unable to get sub-admins for user',\n      identifier: userId,\n      useMeta: true,\n      expectedErrorCodes: [400],\n      customErrors: {\n        [101]: 'user does not exist'\n      }\n    });\n  }\n\n  return subAdmins;\n}\n\nexport async function resendUserWelcomeEmail(\n  connection: OcsConnection,\n  userId: string\n): Promise<boolean> {\n    let success: Promise<boolean>;\n\n    try {\n      success = await promisifiedResendUserWelcomeEmail.call(connection, userId);\n    } catch (error) {\n      success = rejectWithOcsError(error, {\n        message: 'Unable to resend welcome email for user',\n        identifier: userId,\n        useMeta: true,\n        expectedErrorCodes: [400],\n        customErrors: {\n          [101]: 'email address not available',\n          [102]: 'sending email failed'\n        }\n      });\n    }\n\n    return success;\n  }\n\nexport async function addRemoveUserForGroup(\n  connection: OcsConnection,\n  userId: string,\n  groupId: string,\n  toAdd: boolean\n): Promise<boolean> {\n  let userModifiedForGroup: Promise<boolean>;\n\n  try {\n    userModifiedForGroup = await promisifiedAddRemoveUserForGroup.call(connection, userId, groupId, toAdd);\n  } catch (error) {\n    userModifiedForGroup = rejectWithOcsError(error, {\n      message: `Unable to ${toAdd ? 'add' : 'remove'} user '${userId}' ${toAdd ? 'to' : 'from'} group`,\n      identifier: groupId,\n      useMeta: true,\n      expectedErrorCodes: [400],\n      customErrors: {\n        [101]: 'no group specified',\n        [102]: 'group does not exist',\n        [103]: 'user does not exist',\n        [104]: 'insufficient privileges',\n      }\n    });\n  }\n\n  return userModifiedForGroup;\n}\n\nexport async function addRemoveUserSubAdminForGroup(\n  connection: OcsConnection,\n  userId: string,\n  groupId: string,\n  toAdd: boolean\n): Promise<boolean> {\n  let subAdminModifiedForGroup: Promise<boolean>;\n\n  try {\n    subAdminModifiedForGroup = await promisifiedSetUserSubAdmin.call(connection, userId, groupId, toAdd);\n  } catch (error) {\n    let customErrors = {};\n    if (toAdd) {\n      customErrors[101] = 'user does not exist';\n      customErrors[102] = 'group does not exist';\n    } else {\n      customErrors[101] = 'user or group does not exist';\n      customErrors[102] = 'user is not a sub-admin of the group';\n    }\n\n    subAdminModifiedForGroup = rejectWithOcsError(error, {\n      customErrors,\n      message: `Unable to ${toAdd ? 'add' : 'remove'} user '${userId}' as sub-admin ${toAdd ? 'to' : 'from'} group`,\n      identifier: groupId,\n      useMeta: true,\n      expectedErrorCodes: [400],\n    });\n  }\n\n  return subAdminModifiedForGroup;\n}\n\nexport async function listUsers(\n  connection: OcsConnection,\n  search?: string,\n  limit?: number,\n  offset?: number\n): Promise<string[]> {\n  let users: Promise<string[]>;\n\n  try {\n    users = await promisifiedListUsers.call(connection,\n      search || '',\n      Number.isInteger(limit)  ? limit  : -1,\n      Number.isInteger(offset) ? offset : -1\n    );\n  } catch (error) {\n    users = rejectWithOcsError(error, {\n      message: 'Unable to list users',\n      useMeta: false\n    });\n  }\n\n  return users;\n}\n\nexport async function deleteUser(\n  connection: OcsConnection,\n  userId: string\n): Promise<boolean> {\n  let userDeleted: Promise<boolean>;\n\n  try {\n    userDeleted = await promisifiedDeleteUser.call(connection, userId);\n  } catch (error) {\n    userDeleted = rejectWithOcsError(error, {\n      message: 'Unable to delete user',\n      identifier: userId,\n      useMeta: true,\n      expectedErrorCodes: [400],\n      customErrors: {\n        [101]: 'user does not exist'\n      }\n    });\n  }\n\n  return userDeleted;\n}\n\nexport async function addUser(\n  connection: OcsConnection,\n  user: OcsNewUser\n): Promise<boolean> {\n  let userAdded: Promise<boolean>;\n\n  try {\n    userAdded = await promisifiedAddUser.call(connection, user);\n  } catch (error) {\n    userAdded = rejectWithOcsError(error, {\n      message: 'Unable to add user',\n      identifier: (user && user.userid ? user.userid : ''),\n      useMeta: true,\n      expectedErrorCodes: [400],\n      customErrors: {\n        [102]: 'username already exists',\n        [103]: 'unknown error occurred whilst adding the user',\n        [104]: 'group does not exist',\n        [105]: 'insufficient privileges for group',\n        [106]: 'no group specified (required for sub-admins',\n        [108]: 'password and email empty. Must set password or an email',\n        [109]: 'invitation email cannot be send'\n      }\n    });\n  }\n\n  return userAdded;\n}\n\nexport async function listGroups(\n  connection: OcsConnection,\n  search?: string,\n  limit?: number,\n  offset?: number\n): Promise<string[]> {\n  let groups: Promise<string[]>;\n\n  try {\n    groups = await promisifiedListGroups.call(\n      connection,\n      search || '',\n      Number.isInteger(limit)  ? limit  : -1,\n      Number.isInteger(offset) ? offset : -1\n    );\n  } catch (error) {\n    groups = rejectWithOcsError(error, {\n      message: 'Unable to list groups',\n      useMeta: false\n    });\n  }\n\n  return groups;\n}\n\nexport async function addGroup(\n  connection: OcsConnection,\n  groupId: string\n): Promise<boolean> {\n  let groupAdded: Promise<boolean>;\n\n  try {\n    groupAdded = await promisifiedAddGroup.call(connection, groupId);\n  } catch (error) {\n    groupAdded = rejectWithOcsError(error, {\n      message: 'Unable to add group',\n      identifier: groupId,\n      useMeta: true,\n      expectedErrorCodes: [400],\n      customErrors: {\n        [102]: 'group already exists',\n        [103]: 'failed to add the group'\n      }\n    });\n  }\n\n  return groupAdded;\n}\n\nexport async function deleteGroup(\n  connection: OcsConnection,\n  groupId: string\n): Promise<boolean> {\n  let groupDeleted: Promise<boolean>;\n\n  try {\n    groupDeleted = await promisifiedDeleteGroup.call(connection, groupId);\n  } catch (error) {\n    groupDeleted = rejectWithOcsError(error, {\n      message: 'Unable to delete group',\n      identifier: groupId,\n      useMeta: true,\n      expectedErrorCodes: [400],\n      customErrors: {\n        [101]: 'group does not exist',\n        [102]: 'failed to delete group'\n      }\n    });\n  }\n\n  return groupDeleted;\n}\n\nexport async function getGroupUsers(\n  connection: OcsConnection,\n  groupId: string\n): Promise<string[]> {\n  let users: Promise<string[]>;\n\n  try {\n    users = await promisifiedGetGroupUsers.call(connection, groupId);\n  } catch (error) {\n    users = rejectWithOcsError(error, {\n      message: 'Unable to list users for group',\n      identifier: groupId,\n      useMeta: false,\n      expectedErrorCodes: [404],\n      customErrors: {\n        [404]: 'the group could not be found'\n      }\n    });\n  }\n\n  return users;\n}\n\nexport async function getGroupSubAdmins(\n  connection: OcsConnection,\n  groupId: string\n): Promise<string[]> {\n  let subAdmins: Promise<string[]>;\n\n  try {\n    subAdmins = await promisifiedGetGroupSubAdmins.call(connection, groupId);\n  } catch (error) {\n    subAdmins = rejectWithOcsError(error, {\n      message: 'Unable to list sub-admins for group',\n      identifier: groupId,\n      useMeta: true,\n      expectedErrorCodes: [400],\n      customErrors: {\n        [101]: 'group does not exist'\n      }\n    });\n  }\n\n  return subAdmins;\n}\n\nexport async function getShares(\n  connection: OcsConnection,\n  path?: string,\n  includeReshares?: boolean,\n  showForSubFiles?: boolean\n): Promise<OcsShare[]> {\n  let shares: Promise<OcsShare[]>;\n\n  try {\n    shares = await promisifiedGetShares.call(connection,\n      path || '',\n      (includeReshares !== undefined ? includeReshares : false),\n      (showForSubFiles !== undefined ? showForSubFiles : false)\n    );\n  } catch (error) {\n    shares = rejectWithOcsError(error, {\n      message: 'Unable to get shares for',\n      identifier: path,\n      useMeta: true,\n      expectedErrorCodes: [400, 404],\n      customErrors: {\n        [400]: 'unable to show sub-files as this is not a directory',\n        [404]: 'file/folder doesn\\'t exist'\n      }\n    });\n  }\n\n  return shares;\n}\n\nexport async function getShare(\n  connection: OcsConnection,\n  shareId: number | string\n): Promise<OcsShare> {\n  let share: Promise<OcsShare>;\n\n  try {\n    share = await promisifiedGetShare.call(connection, shareId);\n  } catch (error) {\n    share = rejectWithOcsError(error, {\n      message: 'Unable to get share',\n      identifier: shareId,\n      useMeta: true,\n      expectedErrorCodes: [404]\n    });\n  }\n\n  return share;\n}\n\nexport async function deleteShare(\n  connection: OcsConnection,\n  shareId: number | string\n): Promise<boolean> {\n  let shareDeleted: Promise<boolean>;\n\n  try {\n    shareDeleted = await promisifiedDeleteShare.call(connection, shareId);\n  } catch (error) {\n    shareDeleted = rejectWithOcsError(error, {\n      message: 'Unable to delete share',\n      identifier: shareId,\n      useMeta: true,\n      expectedErrorCodes: [404],\n      customErrors: {\n        [404]: 'invalid shareId or the share doesn\\'t exist'\n      }\n    });\n  }\n\n  return shareDeleted;\n}\n\nexport async function addShare(\n  connection: OcsConnection,\n  path: string,\n  shareType: OcsShareType,\n  shareWith?: string,\n  permissions?: OcsSharePermissions,\n  password?: string,\n  publicUpload?: boolean,\n): Promise<OcsShare> {\n  let addedShare: Promise<OcsShare>;\n\n  try {\n    addedShare = await promisifiedAddShare.call(connection,\n      path,\n      shareType,\n      shareWith || '',\n      (permissions !== undefined ? permissions : OcsSharePermissions.default),\n      password || '',\n      (publicUpload !== undefined ? publicUpload : false),\n    );\n  } catch (error) {\n    addedShare = rejectWithOcsError(error, {\n      message: 'Unable to add share',\n      identifier: path,\n      useMeta: true,\n      expectedErrorCodes: [403, 404]\n    });\n  }\n\n  return addedShare;\n}\n\nexport function editShare(\n  connection: OcsConnection,\n  shareId: number | string\n) {\n  return {\n    async permissions(permissions: OcsSharePermissions): Promise<OcsShare> {\n      return await setFieldValue(connection, shareId, 'permissions', permissions);\n    },\n\n    async password(password: string): Promise<OcsShare> {\n      return await setFieldValue(connection, shareId, 'password', password);\n    },\n\n    async publicUpload(isPublicUpload: boolean): Promise<OcsShare> {\n      return await setFieldValue(connection, shareId, 'publicUpload', isPublicUpload);\n    },\n\n    async expireDate(expireDate: string): Promise<OcsShare> {\n      return await setFieldValue(connection, shareId, 'expireDate', expireDate);\n    },\n\n    async note(note: string): Promise<OcsShare> {\n      return await setFieldValue(connection, shareId, 'note', note);\n    }\n  };\n\n  async function setFieldValue(\n    connection: OcsConnection,\n    shareId: number | string,\n    field: OcsEditShareField,\n    value: any\n  ): Promise<OcsShare> {\n    let editedShare: Promise<OcsShare>;\n\n    try {\n      editedShare = await promisifiedEditShare.call(connection, shareId, field, String(value));\n    } catch (error) {\n      editedShare = rejectWithOcsError(error, {\n        message: `Unable to edit '${field}' of share`,\n        identifier: shareId,\n        useMeta: true,\n        expectedErrorCodes: [400, 404]\n      });\n    }\n\n    return editedShare;\n  }\n}\n\nexport async function getGroupfolders(\n  connection: OcsConnection,\n): Promise<OcsGroupfolder[]> {\n  let groupfolders: Promise<OcsGroupfolder[]>;\n\n  try {\n    groupfolders = await promisifiedGetGroupfolders.call(connection);\n  } catch (error) {\n    groupfolders = rejectWithOcsError(error, {\n      message: 'Unable to list groupfolders',\n      useMeta: true,\n      expectedErrorCodes: [500],\n    });\n  }\n\n  return groupfolders;\n}\n\nexport async function getGroupfolder(\n  connection: OcsConnection,\n  groupfolderId: number,\n): Promise<OcsGroupfolder> {\n  let groupfolder: Promise<OcsGroupfolder>;\n\n  try {\n    groupfolder = await promisifiedGetGroupfolder.call(connection, groupfolderId);\n  } catch (error) {\n    groupfolder = rejectWithOcsError(error, {\n      message: 'Unable to get groupfolder',\n      identifier: groupfolderId,\n      useMeta: true,\n      expectedErrorCodes: [500],\n    });\n  }\n\n  return groupfolder;\n}\n\nexport async function addGroupfolder(\n  connection: OcsConnection,\n  mountpoint: string,\n): Promise<number> {\n  let addedGroupfolderId: Promise<number>;\n\n  try {\n    addedGroupfolderId = await promisifiedAddGroupfolder.call(connection, mountpoint);\n  } catch (error) {\n    addedGroupfolderId = rejectWithOcsError(error, {\n      message: 'Unable to create groupfolder',\n      identifier: mountpoint,\n      useMeta: true,\n      expectedErrorCodes: [500],\n    });\n  }\n\n  return addedGroupfolderId;\n}\n\nexport async function removeGroupfolder(\n  connection: OcsConnection,\n  groupfolderId: number,\n): Promise<boolean> {\n  let groupfolderDeleted: Promise<boolean>;\n\n  try {\n    groupfolderDeleted = await promisifiedRemoveGroupfolder.call(connection, groupfolderId);\n  } catch (error) {\n    groupfolderDeleted = rejectWithOcsError(error, {\n      message: 'Unable to delete groupfolder',\n      identifier: groupfolderId,\n      useMeta: true,\n      expectedErrorCodes: [500],\n    });\n  }\n\n  return groupfolderDeleted;\n}\n\nexport async function addGroupfolderGroup(\n  connection: OcsConnection,\n  groupfolderId: number,\n  groupId: string,\n): Promise<boolean> {\n  let groupfolderGroupAdded: Promise<boolean>;\n\n  try {\n    groupfolderGroupAdded = await promisifiedAddGroupfolderGroup.call(connection, groupfolderId, groupId);\n  } catch (error) {\n    groupfolderGroupAdded = rejectWithOcsError(error, {\n      message: 'Unable to add group to groupfolder',\n      identifier: groupfolderId,\n      useMeta: true,\n      expectedErrorCodes: [500],\n    });\n  }\n\n  return groupfolderGroupAdded;\n}\n\nexport async function removeGroupfolderGroup(\n  connection: OcsConnection,\n  groupfolderId: number,\n  groupId: string,\n): Promise<boolean> {\n  let groupfolderGroupRemoved: Promise<boolean>;\n\n  try {\n    groupfolderGroupRemoved = await promisifiedRemoveGroupfolderGroup.call(connection, groupfolderId, groupId);\n  } catch (error) {\n    groupfolderGroupRemoved = rejectWithOcsError(error, {\n      message: 'Unable to remove group from groupfolder',\n      identifier: groupfolderId,\n      useMeta: true,\n      expectedErrorCodes: [500],\n    });\n  }\n\n  return groupfolderGroupRemoved;\n}\n\nexport async function setGroupfolderPermissions(\n  connection: OcsConnection,\n  groupfolderId: number,\n  groupId: string,\n  permissions: number,\n): Promise<boolean> {\n  let groupfolderPermissionsSet: Promise<boolean>;\n\n  try {\n    groupfolderPermissionsSet = await promisifiedSetGroupfolderPermissions.call(connection, groupfolderId, groupId, permissions);\n  } catch (error) {\n    groupfolderPermissionsSet = rejectWithOcsError(error, {\n      message: 'Unable to set groupfolder permissions',\n      identifier: groupfolderId,\n      useMeta: true,\n      expectedErrorCodes: [500],\n    });\n  }\n\n  return groupfolderPermissionsSet;\n}\n\nexport async function enableGroupfolderACL(\n  connection: OcsConnection,\n  groupfolderId: number,\n  enable: boolean,\n): Promise<boolean> {\n  let groupfolderACLEnabled: Promise<boolean>;\n\n  try {\n    groupfolderACLEnabled = await promisifiedEnableOrDisableGroupfolderACL.call(connection, groupfolderId, enable);\n  } catch (error) {\n    groupfolderACLEnabled = rejectWithOcsError(error, {\n      message: 'Unable to enable ACL for groupfolder',\n      identifier: groupfolderId,\n      useMeta: true,\n      expectedErrorCodes: [500],\n    });\n  }\n\n  return groupfolderACLEnabled;\n}\n\nexport async function setGroupfolderManageACL(\n  connection: OcsConnection,\n  groupfolderId: number,\n  type: 'group' | 'user',\n  id: string,\n  manageACL: boolean,\n): Promise<boolean> {\n  let groupfolderManageACLSet: Promise<boolean>;\n\n  try {\n    groupfolderManageACLSet = await promisifiedSetGroupfolderManageACL.call(connection, groupfolderId, type, id, manageACL);\n  } catch (error) {\n    groupfolderManageACLSet = rejectWithOcsError(error, {\n      message: 'Unable to set groupfolder manage ACL settings',\n      identifier: groupfolderId,\n      useMeta: true,\n      expectedErrorCodes: [500],\n    });\n  }\n\n  return groupfolderManageACLSet;\n}\n\nexport async function setGroupfolderQuota(\n  connection: OcsConnection,\n  groupfolderId: number,\n  quota: number,\n): Promise<boolean> {\n  let groupfolderQuotaSet: Promise<boolean>;\n\n  try {\n    groupfolderQuotaSet = await promisifiedSetGroupfolderQuota.call(connection, groupfolderId, quota);\n  } catch (error) {\n    groupfolderQuotaSet = rejectWithOcsError(error, {\n      message: 'Unable to set groupfolder quota',\n      identifier: groupfolderId,\n      useMeta: true,\n      expectedErrorCodes: [500],\n    });\n  }\n\n  return groupfolderQuotaSet;\n}\n\nexport async function renameGroupfolder(\n  connection: OcsConnection,\n  groupfolderId: number,\n  mountpoint: string,\n): Promise<boolean> {\n  let groupfolderRenamed: Promise<boolean>;\n\n  try {\n    groupfolderRenamed = await promisifiedRenameGroupfolder.call(connection, groupfolderId, mountpoint);\n  } catch (error) {\n    groupfolderRenamed = rejectWithOcsError(error, {\n      message: 'Unable to rename groupfolder',\n      identifier: groupfolderId,\n      useMeta: true,\n      expectedErrorCodes: [500],\n    });\n  }\n\n  return groupfolderRenamed;\n}\n","import { OcsConnection }        from './ocs/ocs-connection';\nimport { WebDavClient }         from './webdav';\n\nimport {\n  OcsShareType,\n  OcsSharePermissions,\n  type OcsEditUserField,\n  type OcsGroupfolder,\n  type OcsActivity,\n  type OcsNewUser,\n  type OcsShare,\n  type OcsUser,\n} from './ocs/types';\nimport { Optional } from 'lonad';\n\nexport * from './ocs/types';\n\nexport type AsyncFunction       = (...parameters: any[]) => Promise<any>;\nexport class NextcloudClientProperties {\n  webdavConnection: Optional<WebDavClient>;\n  ocsConnection:    OcsConnection;\n  username:         string;\n  url:              string;\n}\n\nexport interface NextcloudClientInterface extends NextcloudClientProperties {\n  as(username: string, password: string): NextcloudClientInterface;\n  get:                                                                        WebDavClient['get'];\n  put:                                                                        WebDavClient['put'];\n  move:                                                                       WebDavClient['move'];\n  remove:                                                                     WebDavClient['remove'];\n  exists:                                                                     WebDavClient['exists'];\n  rename:                                                                     WebDavClient['rename'];\n  getFiles:                                                                   WebDavClient['getFiles'];\n  getPathInfo:                                                                WebDavClient['getPathInfo'];\n  touchFolder:                                                                WebDavClient['touchFolder'];\n  getReadStream:                                                              WebDavClient['getReadStream'];\n  getWriteStream:                                                             WebDavClient['getWriteStream'];\n  uploadFromStream:                                                           WebDavClient['uploadFromStream'];\n  downloadToStream:                                                           WebDavClient['downloadToStream'];\n  checkConnectivity:                                                          WebDavClient['checkConnectivity'];\n  getFolderProperties:                                                        WebDavClient['getFolderProperties'];\n  getFolderFileDetails:                                                       WebDavClient['getFolderFileDetails'];\n  createFolderHierarchy:                                                      WebDavClient['createFolderHierarchy'];\n\n\n  // Common\n  getCreatorByFileId(fileId: number | string):                                Promise<string>;\n  getCreatorByPath(path: string):                                             Promise<string>;\n\n  // OCS\n  activities: {\n    get: (fileId: number | string, sort?: 'asc' | 'desc',\n    limit?: number, sinceActivityId?: number) =>                              Promise<OcsActivity[]>\n  };\n  users: {\n    removeSubAdminFromGroup: (userId: string, groupId: string) =>             Promise<boolean>\n    addSubAdminToGroup: (userId: string, groupId: string) =>                  Promise<boolean>\n    resendWelcomeEmail: (userId: string) =>                                   Promise<boolean>\n    getSubAdminGroups: (userId: string) =>                                    Promise<string[]>\n    removeFromGroup: (userId: string, groupId: string) =>                     Promise<boolean>\n    setEnabled: (userId: string, isEnabled: boolean) =>                       Promise<boolean>\n    addToGroup: (userId: string, groupId: string) =>                          Promise<boolean>\n    getGroups: (userId: string) =>                                            Promise<string[]>\n    delete: (userId: string) =>                                               Promise<boolean>\n    edit: (userId: string, field: OcsEditUserField, value: string) =>         Promise<boolean>\n    list: (search?: string, limit?: number, offset?: number) =>               Promise<string[]>\n    add: (user: OcsNewUser) =>                                                Promise<boolean>\n    get: (userId: string) =>                                                  Promise<OcsUser>\n  };\n\n  groups: {\n    getSubAdmins: (groupId: string) =>                                        Promise<string[]>\n    getUsers: (groupId: string) =>                                            Promise<string[]>\n    delete: (groupId: string) =>                                              Promise<boolean>\n    list: (search?: string, limit?: number, offset?: number) =>               Promise<string[]>\n    add: (groupId: string) =>                                                 Promise<boolean>\n  };\n\n  shares: {\n    delete: (shareId: string | number) =>                                     Promise<boolean>\n    edit: {\n      permissions: (shareId: string | number,\n      permissions: OcsSharePermissions) =>                                    Promise<OcsShare>\n      password: (shareId: string | number,\n      password: string) =>                                                    Promise<OcsShare>\n      publicUpload: (shareId: string | number,\n      isPublicUpload: boolean) =>                                             Promise<OcsShare>\n      expireDate: (shareId: string | number,\n      expireDate: string) =>                                                  Promise<OcsShare>\n      note: (shareId: string | number, note: string) =>                       Promise<OcsShare>\n    }\n    list: (path?: string, includeReshares?: boolean,\n    showForSubFiles?: boolean) =>                                             Promise<OcsShare[]>\n    add: (path: string, shareType: OcsShareType, shareWith?: string,\n      permissions?: OcsSharePermissions, password?: string,\n      publicUpload?: boolean) =>                                              Promise<OcsShare>\n    get: (shareId: string | number) =>                                        Promise<OcsShare>\n  };\n\n  groupfolders: {\n    getFolders: () => Promise<OcsGroupfolder[]>\n    getFolder: (fid: number) => Promise<OcsGroupfolder>\n    addFolder: (mountpoint: string) => Promise<number>\n    removeFolder: (fid: number) => Promise<boolean>\n    addGroup: (fid: number, gid: string) => Promise<boolean>\n    removeGroup: (fid: number, gid: string) => Promise<boolean>\n    setPermissions: (fid: number, gid: string, permissions: number) => Promise<boolean>\n    enableACL: (fid: number, enable: boolean) => Promise<boolean>\n    setManageACL: (fid: number, type: 'group' | 'user', id: string, manageACL: boolean) => Promise<boolean>\n    setQuota: (fid: number, quota: number) => Promise<boolean>\n    renameFolder: (fid: number, mountpoint: string) => Promise<boolean>\n  };\n}\n\nexport interface ConnectionOptions {\n  url:       string;\n  username?: string;\n  password?: string;\n}\n","import { createDetailProperty } from './webdav.utils';\n\n/**\n * Creates a ownCloud detail property for use with the various WebDAV methods.\n * @param element The element name (e.g. `fileid`)\n * @param nativeType **UNUSED** - The native type of the property (e.g. `number`)\n * @param defaultValue The default value to return if the property is not found\n * @returns A detail property\n *\n * @deprecated Use `createDetailProperty` instead\n */\nexport function createOwnCloudFileDetailProperty(element: string, nativeType?: boolean, defaultValue?: any) {\n  return createDetailProperty('oc', element, defaultValue);\n}\n\n/**\n * Creates a NextCloud detail property for use with the various WebDAV methods.\n * @param element The element name (e.g. `fileid`)\n * @param nativeType **UNUSED** - The native type of the property (e.g. `number`)\n * @param defaultValue The default value to return if the property is not found\n * @returns A detail property\n *\n * @deprecated Use `createDetailProperty` instead\n */\nexport function createNextCloudFileDetailProperty(element: string, nativeType?: boolean, defaultValue?: any) {\n  return createDetailProperty('nc', element, defaultValue);\n}\n","import {\n  WebDavClient\n} from './webdav';\n\nimport {\n  getCreatorByFileId,\n  getCreatorByPath,\n} from './common';\n\nexport * from './errors';\n\nimport {\n  addRemoveUserSubAdminForGroup,\n  setGroupfolderPermissions,\n  setGroupfolderManageACL,\n  configureOcsConnection,\n  resendUserWelcomeEmail,\n  removeGroupfolderGroup,\n  addRemoveUserForGroup,\n  enableGroupfolderACL,\n  addGroupfolderGroup,\n  setGroupfolderQuota,\n  getGroupSubAdmins,\n  renameGroupfolder,\n  removeGroupfolder,\n  getUserSubAdmins,\n  getGroupfolders,\n  addGroupfolder,\n  getGroupfolder,\n  setUserEnabled,\n  getActivities,\n  getGroupUsers,\n  getUserGroups,\n  deleteGroup,\n  deleteShare,\n  deleteUser,\n  listGroups,\n  editShare,\n  getShares,\n  listUsers,\n  addGroup,\n  addShare,\n  editUser,\n  getShare,\n  getUser,\n  addUser,\n} from './ocs/ocs';\n\nimport {\n  OcsShareType,\n  OcsSharePermissions,\n  type OcsEditUserField,\n  type OcsNewUser,\n  type OcsUser,\n} from './ocs/types';\n\nimport {\n  NextcloudClientProperties,\n  type NextcloudClientInterface,\n  type ConnectionOptions\n} from './types';\nimport OcsConnection from './ocs/ocs-connection';\nimport { NextCloudClientException } from './errors';\nimport { Optional } from 'lonad';\n\nexport {\n  createOwnCloudFileDetailProperty,\n  createNextCloudFileDetailProperty,\n} from './helper';\n\nexport { createDetailProperty } from './webdav.utils';\n\nexport class NextcloudClient extends NextcloudClientProperties implements NextcloudClientInterface {\n  configureOcsConnection    = configureOcsConnection;\n\n  createFolderHierarchy     = this.wrapWebDav(WebDavClient.prototype.createFolderHierarchy);\n  getFolderFileDetails      = this.wrapWebDav(WebDavClient.prototype.getFolderFileDetails);\n  getFolderProperties       = this.wrapWebDav(WebDavClient.prototype.getFolderProperties);\n  checkConnectivity         = this.wrapWebDav(WebDavClient.prototype.checkConnectivity);\n  downloadToStream          = this.wrapWebDav(WebDavClient.prototype.downloadToStream);\n  uploadFromStream          = this.wrapWebDav(WebDavClient.prototype.uploadFromStream);\n  getFilesDetailed          = this.wrapWebDav(WebDavClient.prototype.getFilesDetailed);\n  getWriteStream            = this.wrapWebDav(WebDavClient.prototype.getWriteStream);\n  getReadStream             = this.wrapWebDav(WebDavClient.prototype.getReadStream);\n  touchFolder               = this.wrapWebDav(WebDavClient.prototype.touchFolder);\n  getPathInfo               = this.wrapWebDav(WebDavClient.prototype.getPathInfo);\n  getFiles                  = this.wrapWebDav(WebDavClient.prototype.getFiles);\n  rename                    = this.wrapWebDav(WebDavClient.prototype.rename);\n  remove                    = this.wrapWebDav(WebDavClient.prototype.remove);\n  exists                    = this.wrapWebDav(WebDavClient.prototype.exists);\n  move                      = this.wrapWebDav(WebDavClient.prototype.move);\n  put                       = this.wrapWebDav(WebDavClient.prototype.put);\n  get                       = this.wrapWebDav(WebDavClient.prototype.get);\n\n  // Common\n  getCreatorByFileId          = getCreatorByFileId;\n  getCreatorByPath            = getCreatorByPath;\n\n  // OCS\n  activities = {\n    get                     : (\n      fileId: number | string,\n      sort?: 'asc' | 'desc',\n      limit?: number,\n      sinceActivityId?: number\n    ) => getActivities(this.ocsConnection, fileId, sort, limit, sinceActivityId)\n  };\n\n  users = {\n    removeSubAdminFromGroup : (userId: string, groupId: string) => addRemoveUserSubAdminForGroup(this.ocsConnection, userId, groupId, false),\n    addSubAdminToGroup      : (userId: string, groupId: string) => addRemoveUserSubAdminForGroup(this.ocsConnection, userId, groupId, true),\n    resendWelcomeEmail      : (userId: string) => resendUserWelcomeEmail(this.ocsConnection, userId),\n    getSubAdminGroups       : (userId: string) => getUserSubAdmins(this.ocsConnection, userId),\n    removeFromGroup         : (userId: string, groupId: string) => addRemoveUserForGroup(this.ocsConnection, userId, groupId, false),\n    setEnabled              : (userId: string, isEnabled: boolean) => setUserEnabled(this.ocsConnection, userId, isEnabled),\n    addToGroup              : (userId: string, groupId: string) => addRemoveUserForGroup(this.ocsConnection, userId, groupId, true),\n    getGroups               : (userId: string) => getUserGroups(this.ocsConnection, userId),\n    delete                  : (userId: string) => deleteUser(this.ocsConnection, userId),\n    edit                    : (userId: string, field: OcsEditUserField, value: string) => editUser(this.ocsConnection, userId, field, value),\n    list                    : (search?: string, limit?: number, offset?: number) => listUsers(this.ocsConnection, search, limit, offset),\n    add                     : (user: OcsNewUser) => addUser(this.ocsConnection, user),\n    get                     : (userId: string) => getUser(this.ocsConnection, userId),\n  };\n\n  groups = {\n    getSubAdmins            : (groupId: string) => getGroupSubAdmins(this.ocsConnection, groupId),\n    getUsers                : (groupId: string) => getGroupUsers(this.ocsConnection, groupId),\n    delete                  : (groupId: string) => deleteGroup(this.ocsConnection, groupId),\n    list                    : (search?: string, limit?: number, offset?: number) => listGroups(this.ocsConnection, search, limit, offset),\n    add                     : (groupId: string) => addGroup(this.ocsConnection, groupId),\n  };\n\n  shares = {\n    delete                  : (shareId: number | string) => deleteShare(this.ocsConnection, shareId),\n    edit: {\n      permissions           : (shareId: number | string, permissions: OcsSharePermissions) => editShare(this.ocsConnection, shareId).permissions(permissions),\n      password              : (shareId: number | string, password: string) => editShare(this.ocsConnection, shareId).password(password),\n      publicUpload          : (shareId: number | string, isPublicUpload: boolean) => editShare(this.ocsConnection, shareId).publicUpload(isPublicUpload),\n      expireDate            : (shareId: number | string, expireDate: string) => editShare(this.ocsConnection, shareId).expireDate(expireDate),\n      note                  : (shareId: number | string, note: string) => editShare(this.ocsConnection, shareId).note(note),\n    },\n    list                    : (path?: string, includeReshares?: boolean, showForSubFiles?: boolean) => getShares(this.ocsConnection, path, includeReshares, showForSubFiles),\n    add                     : (path: string, shareType: OcsShareType, shareWith?: string, permissions?: OcsSharePermissions,\n    password?: string, publicUpload?: boolean) => addShare(this.ocsConnection, path, shareType, shareWith, permissions, password, publicUpload),\n    get                     : (shareId: number | string) => getShare(this.ocsConnection, shareId),\n  };\n\n  groupfolders = {\n    getFolders: () => getGroupfolders(this.ocsConnection),\n    getFolder: (fid: number) => getGroupfolder(this.ocsConnection, fid),\n    addFolder: (mountpoint: string) => addGroupfolder(this.ocsConnection, mountpoint),\n    removeFolder: (fid: number) => removeGroupfolder(this.ocsConnection, fid),\n    addGroup: (fid: number, gid: string) => addGroupfolderGroup(this.ocsConnection, fid, gid),\n    removeGroup: (fid: number, gid: string) => removeGroupfolderGroup(this.ocsConnection, fid, gid),\n    setPermissions: (fid: number, gid: string, permissions: number) => setGroupfolderPermissions(this.ocsConnection, fid, gid, permissions),\n    enableACL: (fid: number, enable: boolean) => enableGroupfolderACL(this.ocsConnection, fid, enable),\n    setManageACL: (fid: number, type: 'group' | 'user', id: string, manageACL: boolean) => setGroupfolderManageACL(this.ocsConnection, fid, type, id, manageACL),\n    setQuota: (fid: number, quota: number) => setGroupfolderQuota(this.ocsConnection, fid, quota),\n    renameFolder: (fid: number, mountpoint: string) => renameGroupfolder(this.ocsConnection, fid, mountpoint),\n  };\n\n  constructor(private options: ConnectionOptions) {\n    super();\n\n    this.username = options.username;\n    this.url      = options.url.endsWith('/') ? options.url.slice(0, -1) : options.url;\n\n    this.webdavConnection = Optional.None();\n\n    this.configureOcsConnection(options);\n  }\n\n  as(username: string, password: string): NextcloudClient {\n    return new NextcloudClient({ username, password, url: this.url });\n  }\n\n  /**\n   * Wrap a given prototype function to ensure such that the function called is\n   * using the initialized WebDAV connection.\n   * @param fn The function to wrap\n   * @returns The wrapped function\n   */\n  private wrapWebDav<TFn extends (...args: any[]) => any>(fn: TFn): ReturnType<TFn> extends PromiseLike<any>\n    ? TFn\n    : Promise<ReturnType<TFn>> {\n    return (async (...args: any[]) => {\n      if (Optional.isNone(this.webdavConnection)) {\n        this.webdavConnection = Optional.fromNullable(\n          await WebDavClient.create(this.url, this.options)\n        );\n      }\n\n      if (Optional.isNone(this.webdavConnection)) {\n        throw new NextCloudClientException('WebDAV connection could not be initialized');\n      }\n\n      return fn.apply(this.webdavConnection.get(), args);\n    }) as any;\n  }\n}\n\n// Shush, Typescript…\nexport default NextcloudClient;\n"],"names":["Result","Optional","Stream.PassThrough","baseUrl"],"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"}